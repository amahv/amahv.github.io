<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【IPV6】LEDE二级路由配置ipv6</title>
      <link href="/2020/12/22/ipv6-lede-er-ji-lu-you-pei-zhi-ipv6/"/>
      <url>/2020/12/22/ipv6-lede-er-ji-lu-you-pei-zhi-ipv6/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="84ec974593358ac82c15ba923da1a08b0c9a2efca74ac9a398353bcffdc8924d">ab7a6713ff09e4e4d999d7ae7102e4bfd25a1e0f8911c506b1957cb780e722071139f420421ec9f510eb567e71e64da9e85c70d55299e1bde67653f983a4515e040b35610536174d3a06ca0e4d5fedb8b8bf2885067d5d6bcc3582f88c7dc493e83c186cb3c755783b49a1dc16072be50ce0e02f7e72994b9bb7d32ccbdeef40c3629408b19f42206852ba541c964c9744792b85a18f1fe2824fe08ba7614b9019fdedcf4aa6fa4d40982d4de632ec3019f05e59e6feb632f9ded286cc6c4fe4c78fe0aa3bdc3c38c079e737c00ab9b49a070844276b4740751f9f42981288aa423ce78c268118985a16fc5cc42048d56c460f6f01b87ecf7e79396e77a172abe3c07782fa6f6c35d75fa7f536faee3064fd75435d19b673ac356cf4d84620d87ab894c04ed3c7037436b6c17c3da166a76a70320956f3678cba5bd2fcf9ab73010726b20d365e8e573de92b5a25c35f82d5aaf29f1816d1ad6d719129565399584da4c51acd44f08083f5e592cc273eb6a222f2c829a48a0908906715f70b387e47a2c594424b9d78cdf547b07862b2d433423a74603813ea7c5e34ea42e39f9edfd854f5fcc7a7d82f98a7dc6071e23c2d6f184cf6f1927f8151dd4bb8566314d7c57000543b98f5d4ec229e7b6d99026f6d1ba562bff81e0c02cd16bc898ebfaa54ee20d59c5569876a556f7206bf0d02fa301932831dd52cbf6eae2e5a5f7e49ef9dc9b8e02716fad3c792d71ba2a460337c1647339d84fc3734ba43bdc6c510dffbee6b7f172cafa00f01248083c688bc04dbedda7b85a1485abe9079700571a2398c0f43cb74341dab55aacf76d305d2e1887794e48d2dd9a82a6beefa22c545d360e00ff7827ab75f23afaccf763034bca5e6a58b8cd409efe650cf8dbaa71412ff91208fad63a0e54d4a5590ac5fe7a5a75121d7b7e1da2309185bbc1967c10a6bcb10ff91d61fe5c2665c19709a48c1768d5d9c288d5bfe7edf01f36cdd59658569fffb50f1868ceb49f7bf3a63833c19534f8e1532837eab5a64d4e3717cfc047819dd48834dc26ef9e7dc77c2cab6e5454a40b78c797e2faeca10cb63bec65d4a41f415f214857384d9ef8f85da2cef68f163416b16e44f6a13545a712fd838820c0b2032ad7b0cb3e6b09626bcaed5f0a2171bcc7fa02eee4bb2b664f91ab9a56996c6c9059f07864b6399d84061d8b8afce8dc38f14701b73a50ee1cca25308a458aceac779f4bd4f3d9dad743ca1f564b1e2e7504f8cc6c398b34d40f732ad2e9236a37cf7f880ecafc14aab79d2f97f4db9c716b5da4a5540cbc1e664f365c01fbb9b48d07d503fbc32c1d62da32400889519779e256a60751c3641e3d0614108f4ce4da15c59056bf74d1dbb33cd5e94fa95f1b9ffc290969bb213b854cbea873d46b9b76605627b914911b182ad1ecedd9f5d9fe6d1a6e6b551ce87e9c15cab585f5cfa8b8eb13d428b722a9e8e5df8c355d3572e9daa678a77522331f22bd053fcef309ae52191f789d6fbae16d94b50bd86bf06f979442a63fbed9828f6e2e1fc543216f1249b537b817d72cf0ab700bb7b819d9f54492d7c7f36092093a87deec316373814f37d6b8e37816cce24a7164b16f3e072aa4da48cfc8631d9ae4eb8d40fb217f53028c1e47ab1a57434721a17cf322d6f62a0a4d130a0639ae3095991603d8b80038390e6b5872cd87edfb1e70c32eedcce64c47ced7cfcea12682e68afc7bf7b280dfa13431ecf30970b5225d4dccb7c1a25d9c7cdecfb4c934c6fa05785690f910f5af74784fe73857f95dede80a187f2ddfcb444c649ea9487678c426363ee37752e5cb03f28ea8aa26362b7e64bd6004814297d42a481610440488306cee1a7e7c6472c28746f78c9a3fca6c3f8d376ee1ec2b7772795b5302925236b498d7b79a6b5072e12f05c9766d7a9400ed0c0e6a9aa9a680046a34d0522f07229958df7bc3636535ad2f67ded59c70a89913baa3addad8172464fe0e0ef6d7b07a6232350ef94ae31cbb2857522834cae09d5f19e55c21f19f359188e2a91df4eadca05581ddf9427c04b4bde50c3571275b928d3f6d901af2e7491ee849078aab0e29972f8f3dd7020e1cead8cbdf0d66250d94a31e231ffdff19c6ef2297310fd3f6161ebe7df88fcc21dcf854aa9e39931e2b575ccc2e07e99f611a8da0fd4bda06e249753709d8b5b0d6720b87b82e5aa8b266b3703f1d726eebd34734a416e19ed98b821ee697197b57be356afefcdcc0c8e2e3431e3f75bf7a1d6fc23fb849a0785020ee075a73bfabe6243d344a6cb4f910f0873081262f8197b6d25a77ee5789e87c40e1b35c11433e909def6647caae045b8891ecda211264a8ab03e2100a482fd61d19284adb7a2c112d8ffd2a5850104d6d844eabd79d44ab8d6cd8b4eeca9181843a4bfca074a365b1068149ff79931586a147df4511f2b6c6fd0238cb88a0a85b52f5ab44b3937327516369c8a681364c3027ab55a760692d28e6a4fd63c001f8cddb0d7bc872344978a5bc9f15154767ffb011ef571ec6202b1ec3b00c1c6cc3d5d16945e8fcca5997227682e28195ebd2689858cf90ac1d07fb83ef868e58b0440d3a9b503fa32ed3dc30e909fbef287aa649d12979e972ba367d3a65149078bc2280518c1cc7fa1b5412f207bf50c3a7f309942eb2fa25cdb6552db750cf189384523fe608d2c511851869610c0f7bbb657681178948fdbcb71718e0d406bac559d9a5a9c872d155dd81cbca5bab24d11ee3d0e2a52234fcb3f82b55da859c0af73dca58ae3bb5f39efb490cbf26679e8355427c313d5a64a9f7fd84d3c45b725292f666e403bcfb267e74f3e02c06d1831bb7701a87b34fa0c1297e295c1de1e10ddab7e8d37648358b0</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> IPV6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【群晖】Docker安装frpc客户端</title>
      <link href="/2020/12/20/qun-hui-docker-an-zhuang-frpc-ke-hu-duan/"/>
      <url>/2020/12/20/qun-hui-docker-an-zhuang-frpc-ke-hu-duan/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5b8418316158362b1f393b7906b870dae8c1e2cd1f6d3d28b7f00fd5a9e92072">86d6ffbf526732a82d143fc0438bc865da4ac699ccffe616ad1e906416a4bdbf427bce4439c7d2a997a0027d83e5d991f39951ac0b14e6feedc113a5903893ff35ea41c95f576dabafd2f8f74ee18de0e71f6923ebe34c1de6181c2df7a78b033f85b7f66d78202db43073c67808a88d2b73418ecce9e3a3584c934f2b3f0af48aa26f1b9be5097620061e878cea1096dd43ca9458e2bdcb30ec7e6d802f5303f6d83d8495f450c96b33b8a93f644706373426509c8b705f355f1554165c2a2f9e871ec395f56cc7e76b784fa7b7bae0be3062e9dc30f3396f0e53db89f5199217ed2f77770ea86907d8587c0547993b7ef02494f8547c742064ee203c1c8fabd9f7a8cfb17a71d01cba9e17648003f43b362ae6f3e18de69c2d04a2f27676ecdaa86088d62117d0997f74a1edbf9bb5e526ccb300ee4f903d1ddb86b0f269502b9219c2eea3a8e24d59099f75ee2209509dbab994615d386f8e6df381c8830c1ddaddb6588d497ec827e8daa80ebb3e17e127ada0d0124b59e457353d89705e41c30f308a6d2a47390636a2ee73f34b4731f27711881eace4695745ad7e5729b72d7c3022e5c71b5a66f4517c216f1c7ed26d78a0ef2efa32d02560e6d0f5f444584f8313559be80e22624c405b7e03245badb57e1bb7c1ad5c2bdce0758662466a1145081bbd89b0b0e056ca81a97b84066a8914c75afcc15edbefb4e76364e9cee2d4510a2b190ebbc43ca1ec0a043c90879c5937f7e566b4b49dba4ecc7b0571b10bb86df4b121d93c819d252f66aa5b1553384d7763c6bcebf7c98d1c64ac442a02e83c767bc5441d78cc734393b49cc8846535ca195903b1989954bbbeb13b54f8bc20affbf86ee969e63440432c7db12f51d4a9b068e5b33d0e95002dd434aa4fc49419410292093f46b6cbc41640b65febd1921b6a673306e58d2e60d828b3d389a99bbdd6a5b5114f43edb2c6a6db6245ca3f444f21e68af6c15992578bd98f340ac90c03ba492d43925ebf05f3c883dd72e6657a68f3bfc7f046cd169b7ef51ae92efe5a85e13cec28abc046386330a8d9eb2838facf19434db2706a457a62fe47f9f7f509cc8bdbeb27d6e1af7394fc6892d510e9ba6064b12c28a99101959901d9bcddd6c3ac83b318bd9b2c9ffe1191f6b15dbaf74dc5e3b151b0249025086f59a3f7507c9a4bb3b338faa323485e214de4d2e281c70a236a60d582432836bf1a48c34b0070f3ecc4f62c3678afc222403041181a0f23804a91809e039a57845856ac641ca3816c3e085935aadc492fbbd1d16b542bcdbd784d932169821e190d8b75d60259c16430b3f6ff9fa1593d955664cd75d6355ff39add227f45405ab61c7ad9936d9caa9560cf4d1f27626482a1d4f94be49443951c96ad9e1ffe0f3876fcea126052acdf607b64b89da968437f5028947832cb73a1e882fab21804ee86362e14bcd950320d9966412259ee30996847bab78e08940b77dd82038dca5e8eabcc21d58b34b1a30b0510fc9fc8c93cac2ee4fdca93f7f67ebbfd17ac5caa1ae8c622dd3ee054cd25930e6df2cc571975756824d579c60e7a49d8a1d6870c9cfa07a21315255f9f51433b7f6ba6adec09bf96db29b0a427f4f8aa94549110139bb1c22ad7e6ef18a5089bbacdec32fd50f71d5db29469bda081680b0a432993967febd9eb4f3669f4a48c95376296e07160c8d553cb3f340f34e159c063bfe6e85e72d4bcb0388e928802dab8528a6c5bf0db34e8fa15b6b305dceaefae9521d08ae4185a79468d7d685a2ab7dbebdca2017dab6a9861dc573967b3e053eff9c8ba906e0a981ad7fa87016bfc2b62b09c46a028d346e1c604839776037681418d933219d3d8d4b5bb4f7a46b6f605d52e79150f64053989679beba02a9934988c012a266fc60773df26f54902a6f5f8b29003ab20e8788dc54a91738639ebe2442f677484878560ff1c3f1b9eaf0d055ecae1fef1b37ba79c15b191553efca2dad16c9694df278567452bbaec3c65bfcbc59d7753c12af24f36b730caa957110b74369a2cb068527ba402a70cacf60e1c002a71959bc1b3e5d7482c27321c15603e7fb48f0ae6c5099b3ba5c713bd08d06d819f567125709168680e4c479c096d98365cff2efdb03e9c742ad3929c1f8aefe9492068b0956e2c75755f4f37846593679cb4ae2d33405cbda6897e66b6e631dc8517e924fb88513821383d171f7a4272610a61448a6c17bedca75e4bdc7265bc5962d042944b4872e8f829fd29e2e5f462f4f3a516f493b705131fd4273ed5f11c5affd0e9bace3c87fe62304ec3955bc6cd339c8d689d27f0b8955616674eed9c47f2cd3eb290d9d5946778c7bdaba60f7fb878a4d2d4758d7d48b862ff5ff74be8998a3778502ec049c2173d3d9f45fd880f5a4b74fb0bcb69a3d56a38c0db1bbe67ab1b0e95bea9e95c8d87054ce3a0b45d7cf7ac83590aa284b73315f4dbb19e0653bf0df394454f2e1acf52734937dbd196914c9076ff2211368098989613f5042c534f0bde008f1135bb030b6fcc3ebe53893732c7eafb82a00451beee7acd6fcfccfdfeccd277da8b6493334836183324445919db846d01c7213063d64d86659e33fcad0e0b85403fbd774a77cbbfa22b6f5444eddc2cef7103d1ff6fcf1074b2fa7552373e691d2f8e90c67d7d5f377f79abcf2957cf2ed7180474c827982b6a09ffcac4e85c26ba9c687ef71736740a3386fbef9e1fb3a7df82143ce2d2a12f4a1987afe624c34c5c7c8408c9393ecefe6d3cc3f0d34a5cc5e8021cf49c70b94274f802ca571ff4938e91d4c8a288906cc46f3caf1ee40f706c646cf8164110c90bc9763829e684868181fb081700648552c17317d4bf1559ac298633a6672f543d6685bac147d68f0369f37e75fef2df4d4ef6328f74c0cf98f4162d3479c388fd67fde5d4f2356fb11bdf232fc23085613ca90025db5b8b5cb0e631540c70254fcc2bf39865201f969b60713a1f2839f73a025f8552e149486a970725fa3ac29af60cef97d38b290b68a46837b81a418bc231bf86e3b8ad750d61b3505087ac81f6d693ef48a290161ceb1b4c5f739fa5831213f67d602699dd067adc4228afcb7e386005c796e09848c654ab1489249c586629c9a90c8aebeda110dfb4cdeb0ac111f47ecbe153453ae0fe04ff6688346d676ea277b4108efc89aac1a6c8a9a2de5e46196a963efa6f63ae1e51ebbca6b7999993fda1fbbfcda549b774bc7ba8f9c95cf49f27d2cc0100c503a780735e52f75730040a997816b72cad0cddd74134e15b227235af672d1b05272685771bf914e3574459f5c336b043259451e5752df289e2251c9beb2e03a1f74969e0500594e6a31cfbcb07d296134e3efea3a551862aada0464c603aa0ca1c6217eb56fb7b77216bedcd3efbe05d8766e2037f9491c4767ff39128a8f6c635bcd2a4dc2278a3e5212282e54748ebdec38e6cd425dc128730d9f99336ffee5f3f5430f62b8efea63dd23072b2e95e2fb486f56a554848a05011fe278ef6e8a9357d3d</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 群晖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Linux】解决Ubuntu下Qt Creator无法输入中文</title>
      <link href="/2020/12/20/linux-jie-jue-ubuntu-xia-qt-creator-wu-fa-shu-ru-zhong-wen/"/>
      <url>/2020/12/20/linux-jie-jue-ubuntu-xia-qt-creator-wu-fa-shu-ru-zhong-wen/</url>
      
        <content type="html"><![CDATA[<p><em>引用：<a href="https://blog.csdn.net/zmnqazqaz/article/details/80074578" target="_blank" rel="noopener">https://blog.csdn.net/zmnqazqaz/article/details/80074578</a></em></p><p>环境：<br>ubuntu16.04<br>fcitx的输入法<br>Qt Creator 5.10.1</p><p>首先需要安装</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt -y <span class="token function">install</span> fcitx-frontend-qt5</code></pre><p>然后将：</p><p>/usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so</p><p>拷贝到：<br>~/Qt/5.10.1/gcc_64/plugins/platforminputcontexts<br>~/Qt/Tools/QtCreator/lib/Qt/plugins/platforminputcontexts</p><p>重启后就可以了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> QT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Linux】树莓派系统压缩备份</title>
      <link href="/2020/12/17/linux-shu-mei-pai-xi-tong-ya-suo-bei-fen/"/>
      <url>/2020/12/17/linux-shu-mei-pai-xi-tong-ya-suo-bei-fen/</url>
      
        <content type="html"><![CDATA[<p>引用:<a href="https://post.smzdm.com/p/apzkgne7/" target="_blank" rel="noopener">树莓派学习笔记 篇四：树莓派4B 的系统备份方法大全（全卡+压缩备份）</a></p><h3 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h3><p>树莓派的官方系统是基于 Debian 的，主要是两个分区：启动分区（boot）、根分区（root），烧录系统的时候就是将这两个分区写入 SD 卡。首次开机后需使用raspi-config来扩展 root 分区的大小，boot 分区不变，来达到使用所有 SD 卡内容量的目的（最新的系统已经不需要扩展操作）。</p><blockquote><p>boot分区：fat32格式，挂载点/boot，存放一些系统启动需要的基本文件，包括内核、驱动、firmware、启动脚本等，可以在Windows上打开读取。</p><p>root分区：ext4格式，挂载点/，存放一些安装的软件和库文件、系统配置、用户数据等。 另外当系统启动时会自动生成和挂载一些必要的其他<a href="https://www.smzdm.com/fenlei/wenjianjia/" target="_blank" rel="noopener">文件夹</a>，包括temfs、sysfs、proc、debugfs、configfs等虚拟文件系统，由操作系统自动管理，备份时不需要关注。root 分区在 Windows 上无法识别，所以每次将 SD 卡插到 Windows 电脑上会弹出来格式化的选项，千万不要点。</p></blockquote><p><strong>对于树莓派系统的备份，主要就是对 boot 和 root 分区的备份。</strong>而 root 分区里面只有一部分空间存储有内容，剩下的部分是空的，如果直接备份的话那就是整个 SD 卡空间备份，也就是上面所说的全卡备份。而压缩备份则是备份 boot 分区和 root 分区中有内容的空间。</p><h4 id="使用gparted"><a href="#使用gparted" class="headerlink" title="使用gparted"></a>使用gparted</h4><p>根据上述压缩备份原理，先在 Linux 环境中将 root 分区拆分内容空间和空白空间，然后在 Windows 上用Win32DiskImager 软件仅读取内容空间进行备份。以下以 Windows 10 64位 + 虚拟机 Ubuntu 18.04 为例，对树莓派4B 的 Raspbian 系统进行压缩备份。</p><p>(1).打开虚拟机，在终端输入sudo apt install gparted 安装 gparted</p><p>(2).将需要备份的 SD 卡插入读卡器然后插入电脑，等待 Linux 读取成功。</p><p>(3).输入sudo gparted启动 gparted，在右上角选择 SD 卡，可以看到 ext4 分区当中置使用了2.46G，剩余12.26G 都是空白的。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132700.png" alt=""></p><p>(4).在 ext4 分区上右击点击 umount 卸载，然后继续右键点击更改大小。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132338.png" alt=""></p><p>(5).在弹出的窗口中重新分配大小，在新大小一栏填入比最小值（3689）大上三四百就行，我这里大 300M，在点击空余空间会自动计算，然后点击右下角 Resize，之后可以看到原来的分区只剩下 4.07G，剩下的 10.58G 空间未分配。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132401.png" alt=""></p><p>(6).然后点击绿色的对号键确认，在弹出的对话框中点应用。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132427.png" alt=""></p><p>(7).等待执行完成，可以看到分区由14.66G 缩小到 4.07G，然后弹出 SD 卡，到这里 Linux 上的操作完成。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132452.png" alt=""></p><p>(8).将 SD 卡重新插到 Windows 上，新建一个空白 img 文件，打开 Win32DiskImager 软件，选中该文件，然后勾选‘’仅读取已分配分区‘’（注意要最新版，旧版本没有这个功能）。<a href="https://sourceforge.net/projects/win32diskimager/" target="_blank" rel="noopener">win32DiskImager下载地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132618.png" alt=""></p><p>(9).等待读取完成，压缩的镜像备份就制作完成了，源镜像文件 3.9GB，备份的镜像文件 4.5GB，如果压缩一下的话就只有 1.8GB 了，适合存储。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217132640.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Linux】USB设备绑定固定名称</title>
      <link href="/2020/12/17/linux-usb-she-bei-bang-ding-gu-ding-ming-cheng/"/>
      <url>/2020/12/17/linux-usb-she-bei-bang-ding-gu-ding-ming-cheng/</url>
      
        <content type="html"><![CDATA[<p>参考：<a href="https://wangpengcheng.github.io/2019/09/18/change_usb_rules_ubuntu/" target="_blank" rel="noopener">https://wangpengcheng.github.io/2019/09/18/change_usb_rules_ubuntu/</a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>根据设备的“供应商ID”和“产品ID”等信息，来绑定指定的设备名称。</p><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><h3 id="查看设备信息"><a href="#查看设备信息" class="headerlink" title="查看设备信息"></a>查看设备信息</h3><pre class=" language-bash"><code class="language-bash">udevadm info --name<span class="token operator">=</span>/dev/video0 --attribute-walk</code></pre><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201217110434.png" alt=""></p><h3 id="添加udev-rules规则文件"><a href="#添加udev-rules规则文件" class="headerlink" title="添加udev rules规则文件"></a>添加<code>udev rules</code>规则文件</h3><p>设备规则文件在Ubuntu中存放在<code>/etc/udev/rules.d/</code>文件夹下。可以在此文件夹中添加自定义的以<code>.rules</code>的文件。</p><p>udev的规则的匹配关键键内容如下：</p><table><thead><tr><th align="left">关键键</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">ACTION</td><td align="left">事件 (uevent)的行为，例如：add( 添加设备 )、remove(删除设备 )。</td></tr><tr><td align="left">KERNEL</td><td align="left">在内核里看到的设备名字，比如sd*表示任意SCSI磁盘设备</td></tr><tr><td align="left">DEVPATH</td><td align="left">内核设备录进，比如/devices/*</td></tr><tr><td align="left">SUBSYSTEM</td><td align="left">子系统名字，例如：sda的子系统为 block。</td></tr><tr><td align="left">BUS</td><td align="left">总线的名字，比如IDE,USB</td></tr><tr><td align="left">DRIVER</td><td align="left">设备驱动的名字，比如ide-cdrom</td></tr><tr><td align="left">ID</td><td align="left">独立于内核名字的设备名字</td></tr><tr><td align="left">SYSFS{value}</td><td align="left">sysfs属性值，他可以表示任意</td></tr><tr><td align="left">ENV{ key}</td><td align="left">环境变量，可以表示任意</td></tr><tr><td align="left">PROGRAM</td><td align="left">可执行的外部程序，如果程序返回0值，该键则认为为真(true)</td></tr><tr><td align="left">RESULT</td><td align="left">上一个PROGRAM调用返回的标准输出。</td></tr><tr><td align="left">NAME</td><td align="left">根据这个规则创建的设备文件的文件名。<strong>注意：仅仅第一行的NAME描述是有效的，后面的均忽略。如果你想使用使用两个以上的名字来访问一个设备的话，可以考虑SYMLINK键。</strong></td></tr><tr><td align="left">SYMLINK</td><td align="left">为 /dev/下的设备文件产生符号链接。由于 udev只能为某个设备产生一个设备文件，<strong>所以为了不覆盖系统默认的 udev规则所产生的文件，推荐使用符号链接。</strong></td></tr><tr><td align="left">OWNER</td><td align="left">设备文件的属组</td></tr><tr><td align="left">GROUP</td><td align="left">设备文件所在的组。</td></tr><tr><td align="left">MODE</td><td align="left">设备文件的权限，采用8进制</td></tr><tr><td align="left">RUN</td><td align="left">为设备而执行的程序列表</td></tr><tr><td align="left">LABEL</td><td align="left">在配置文件里为内部控制而采用的名字标签(下下面的GOTO服务)</td></tr><tr><td align="left">GOTO</td><td align="left">跳到匹配的规则（通过LABEL来标识），有点类似程序语言中的GOTO</td></tr><tr><td align="left">IMPORT{type}</td><td align="left">导入一个文件或者一个程序执行后而生成的规则集到当前文件</td></tr><tr><td align="left">WAIT_FOR_SYSFS</td><td align="left">等待一个特定的设备文件的创建。主要是用作时序和依赖问题。</td></tr><tr><td align="left">PTIONS</td><td align="left">特定的选项：</td></tr><tr><td align="left">last_rule</td><td align="left">对这类设备终端规则执行；</td></tr><tr><td align="left">ignore_device</td><td align="left">忽略当前规则；</td></tr><tr><td align="left">ignore_remove</td><td align="left">忽略接下来的并移走请求。</td></tr><tr><td align="left">all_partitions</td><td align="left">为所有的磁盘分区创建设备文件。</td></tr><tr><td align="left">在<code>/etc/udev/rules.d</code>文件夹下创建自定义<code>myVideoDev.rules</code>文件内容如下</td><td align="left"></td></tr></tbody></table><pre class=" language-bash"><code class="language-bash">ACTION<span class="token operator">==</span><span class="token string">"add"</span>,ATTRS<span class="token punctuation">{</span>idVendor<span class="token punctuation">}</span><span class="token operator">==</span><span class="token string">"32e4"</span>,ATTRS<span class="token punctuation">{</span>idProduct<span class="token punctuation">}</span><span class="token operator">==</span><span class="token string">"9422"</span>,ATTR<span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">==</span><span class="token string">"0"</span>,SYMLINK+<span class="token operator">=</span><span class="token string">"rerVideo"</span></code></pre><p>可以自由添加和删减字段,但是<code>ACTION</code>和<code>SYMLINK+=</code>不能删减</p><h3 id="重启服务查看-对应设备"><a href="#重启服务查看-对应设备" class="headerlink" title="重启服务查看 对应设备"></a>重启服务查看 对应设备</h3><p>当添加或者删除udev的rules文件后，都需要使用如下命令，进行设备读取rules的更新</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> udev reload<span class="token function">sudo</span> <span class="token function">service</span> udev restart</code></pre><p><strong>然后重新插拔USB设备，就可以按照新的规则执行了</strong>。</p><p><strong>注意：两个设备是同种设备时不能由设备芯片进行识别区分,需要找出设备信息的不同之处,比如:ATTR{index}</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Linux】linux开机自启动程序设置方法</title>
      <link href="/2020/12/16/linux-linux-kai-ji-zi-qi-dong-cheng-xu-she-zhi-fang-fa/"/>
      <url>/2020/12/16/linux-linux-kai-ji-zi-qi-dong-cheng-xu-she-zhi-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>引用：<a href="https://blog.csdn.net/qingtian506/article/details/53008605" target="_blank" rel="noopener">https://blog.csdn.net/qingtian506/article/details/53008605</a></p><p>1.首先在自己的工程文件里编写自启动shell文件，这是我的例子如下：文件名字（testudp.sh）,可执行程序为tst_client:</p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment" spellcheck="true">###BEGIN INIT INFO </span><span class="token comment" spellcheck="true"># Provides:         tst_client</span><span class="token comment" spellcheck="true"># Required-Start:    </span><span class="token comment" spellcheck="true"># Required-Stop:</span><span class="token comment" spellcheck="true"># Default-Start:     2 3 4 5</span><span class="token comment" spellcheck="true"># Default-Stop:   0 1 6</span><span class="token comment" spellcheck="true"># Description:        my test</span><span class="token comment" spellcheck="true">### END INIT INFO</span>user<span class="token operator">=</span><span class="token string">"root"</span>dir<span class="token operator">=</span><span class="token string">"/home/usr/test/udp3/tst_client"</span>cmd<span class="token operator">=</span><span class="token string">"./tst_client"</span>name<span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $0<span class="token variable">`</span></span>pid_file<span class="token operator">=</span><span class="token string">"/var/run/<span class="token variable">$name</span>.pid"</span>stdout_log<span class="token operator">=</span><span class="token string">"/tmp/<span class="token variable">$name</span>.log"</span>stderr_log<span class="token operator">=</span><span class="token string">"/tmp/<span class="token variable">$name</span>.err"</span>get_pid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">cat</span> <span class="token string">"<span class="token variable">$pid_file</span>"</span><span class="token punctuation">}</span>is_running<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">[</span> -f <span class="token string">"<span class="token variable">$pid_file</span>"</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ps</span> <span class="token variable"><span class="token variable">`</span>get_pid<span class="token variable">`</span></span> <span class="token operator">></span> /dev/null 2<span class="token operator">></span><span class="token operator">&amp;</span>1<span class="token punctuation">}</span><span class="token keyword">case</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token keyword">in</span>    start<span class="token punctuation">)</span>        <span class="token keyword">if</span> is_running<span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token keyword">echo</span> <span class="token string">"Already started"</span>        <span class="token keyword">fi</span>        <span class="token function">cd</span> <span class="token string">"<span class="token variable">$dir</span>"</span>        <span class="token function">sudo</span> -u <span class="token string">"<span class="token variable">$user</span>"</span> <span class="token variable">$cmd</span> <span class="token operator">>></span> <span class="token string">"<span class="token variable">$stdout_log</span>"</span> 2<span class="token operator">>></span> <span class="token string">"<span class="token variable">$stderr_log</span>"</span> <span class="token operator">&amp;</span>        <span class="token keyword">echo</span> <span class="token variable">$!</span> <span class="token operator">></span> <span class="token string">"<span class="token variable">$pid_file</span>"</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    stop<span class="token punctuation">)</span>        <span class="token function">kill</span> <span class="token variable"><span class="token variable">`</span>get_pid<span class="token variable">`</span></span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    *<span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token string">"auto start failed"</span>        <span class="token keyword">exit</span> 1    <span class="token punctuation">;</span><span class="token punctuation">;</span>esac<span class="token keyword">exit</span> 0</code></pre><p>编写规则如下：1.要有一个start，一般写上执行自己程序所需bash指令，就如在终端中运行一样：</p><p>sudo -root ./run</p><p>2.其次要有一个stop，一般都是写上kill当前自己的进程。</p><p>start和stop用于放在/etc/rc.d文件中，s开头用于启动当前程序，k开头表示kill当前进程。</p><p>注：编写好shell文件后，chmod +x  shell文件将其变为可执行文件，然后一定要现在自己的终端窗口试一下，可以运行后再进行下一步操作。</p><p>2.再将刚刚编写的shell文件拷贝到/etc/init.d中</p><p>3.再将shell文件的软链接放置在/etc/rc.d文件中：</p><p>rc.d文件分为rc0~rc6，每个数字表示不同的运行等级，每个等级表示如下：</p><p>Linux系统有7个运行级别(runlevel)<br>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动<br>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆<br>运行级别2：多用户状态(没有NFS)<br>运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式<br>运行级别4：系统未使用，保留<br>运行级别5：X11控制台，登陆后进入图形GUI模式<br>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</p><p>因此可以将启动链接放置在2,3，4,5，将kill链接放置在0,1,6.</p><p>打开自己的linux文件夹中，rc0.d、rc6.d中的文件一般以K开头，表示停机时关闭这些程序；</p><p>rc1.d中的文件既有k也有s，</p><p>rc2.d、rc3.d、rc4.d、rc5.d中全部为s开头，表示此等级下启动程序</p><p>软连接设置shell文件如下，也可以拆分成bash指令，一个一个来执行，但太繁琐。shell文件如下：(可将此文件起名为install.sh)</p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>SMTCDIR<span class="token operator">=</span>/home/usr/test/udp3/tst_clientINITD<span class="token operator">=</span><span class="token string">"/etc/init.d/testudp.sh"</span>TARGET<span class="token operator">=</span><span class="token string">"testudp.sh"</span><span class="token function">install</span> -m 755 -g root -o root <span class="token variable">$SMTCDIR</span>/testudp.sh <span class="token variable">$INITD</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc0.d/<span class="token string">"K01<span class="token variable">$TARGET</span>"</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc1.d/<span class="token string">"K01<span class="token variable">$TARGET</span>"</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc2.d/<span class="token string">"S05<span class="token variable">$TARGET</span>"</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc3.d/<span class="token string">"S05<span class="token variable">$TARGET</span>"</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc4.d/<span class="token string">"S05<span class="token variable">$TARGET</span>"</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc5.d/<span class="token string">"S05<span class="token variable">$TARGET</span>"</span><span class="token function">ln</span> -s <span class="token variable">$INITD</span> /etc/rc6.d/<span class="token string">"K01<span class="token variable">$TARGET</span>"</span></code></pre><p>将此shell文件chmod +x设置为可执行文件，在终端执行./shell即可。此时查看你的/etc/rc.d各个文件中都有了你的软连接。</p><p>注：一般自己的应用程序设置级别要注意，开启时要放在系统程序之后，如上述shell文件中都为S05;关闭时要放在系统程序之前，即最早关闭，如上述shell文件中都为K01。</p><p>   linux执行时都是按照序号来进行，序号越小越先执行。</p><p>4.取消开机自启动编写shell脚本如下：（可将此文件起名为unstall.sh）</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>pre name<span class="token operator">=</span><span class="token string">"code"</span> class<span class="token operator">=</span><span class="token string">"plain"</span><span class="token operator">></span><span class="token comment" spellcheck="true">#!/bin/bash</span>INITD<span class="token operator">=</span><span class="token string">"/etc/init.d/testudp.sh"</span>TARGET<span class="token operator">=</span><span class="token string">"testudp.sh"</span><span class="token function">rm</span> -f <span class="token variable">$INITD</span><span class="token function">rm</span> -f /etc/rc*.d/*<span class="token variable">$TARGET</span></code></pre><p>好了目前为了实现开机自运行编写的文件有：</p><p>自启动shell文件：testudp.sh</p><p>rc.d软链接设置文件：install.sh</p><p>取消开机自运行文件：unstall.sh</p><p>大家按照我的模板来写就好了。</p><p>好了，以上就是我的心得。写在这里，怕以后忘记了。因为自启动文件写的也少。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【DDNS】群晖配置阿里DDNS</title>
      <link href="/2020/12/08/ddns-qun-hui-pei-zhi-a-li-ddns/"/>
      <url>/2020/12/08/ddns-qun-hui-pei-zhi-a-li-ddns/</url>
      
        <content type="html"><![CDATA[<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="配置容器"><a href="#配置容器" class="headerlink" title="配置容器"></a>配置容器</h4><p>群晖自带的DDNS中并不直接支持阿里DDNS，所以这里采用docker的方式来实现。</p><ul><li>首先打开Docker</li><li>搜索“ddns-go”</li></ul><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208231824.png" alt=""></p><ul><li><p>下载ddns-go</p></li><li><p>然后启动</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232116.png" alt=""></p></li><li><p>高级设置</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232235.png" alt=""></p></li><li><p>改成和容器端口一样</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232400.png" alt=""></p></li><li><p>在高级设置里面选择“创建桌面快捷方式”</p></li><li><p>选择网页。</p></li><li><p>在网址后面加上端口号</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232446.png" alt=""></p></li><li><p>最后点击应用</p></li><li><p>点击下一步</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232716.png" alt=""></p></li><li><p>保持默认</p></li><li><p>点击“应用”</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232838.png" alt=""></p></li></ul><h4 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h4><ul><li>容器启动后，桌面上会多出这样一个快捷方式</li></ul><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208232922.png" alt="点击图标可进入管理页面"></p><ul><li><p>点击图标进入管理页面</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201208233725.png" alt=""></p></li><li><p>下面的配置保持默认不动。这里配置完之后直接保存</p></li></ul><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> DDNS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDNS </tag>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【openwrt】使用LEDE自带的动态DNS进行动态域名解析</title>
      <link href="/2020/12/02/openwrt-shi-yong-lede-zi-dai-de-dong-tai-dns-jin-xing-dong-tai-yu-ming-jie-xi/"/>
      <url>/2020/12/02/openwrt-shi-yong-lede-zi-dai-de-dong-tai-dns-jin-xing-dong-tai-yu-ming-jie-xi/</url>
      
        <content type="html"><![CDATA[<p>引用<a href="https://www.vediotalk.com/archives/7713" target="_blank" rel="noopener">https://www.vediotalk.com/archives/7713</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>这个方法不仅适合主路由器,也同时适合二级路由器.</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201202222603.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201202223050.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201202223419.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201202223515.png" alt="这里可以查看DDNS解析日志"></p><h2 id="使用NAS"><a href="#使用NAS" class="headerlink" title="使用NAS"></a>使用NAS</h2><p>使用NAS的情况下我们希望局域网内的访问直接就解析到IP地址,我们则可以使用这么一个小技巧。</p><p>首先我们看到这个DDNS设置是可以将【查询主机名】和【域名】分开指定的，我在我的局域网内将我的域名直接通过hosts解析为：192.168.123.120，这样的话，查询主机名将一直会是192.168.123.120，这将会一直触发解析配置，这不是我们想要的。要避免这样的情况，可以在你的阿里云云解析中增加一条CNAME解析，将我们的【查询主机名】就指向到CNAME解析的域名上，而【域名】则维持原来的不变。这样就不影响了，下面看我怎么做的。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201202225523.png" alt="CNAME解析妙用"></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201202225928.png" alt=""></p><p>你是否直呼内行！！！妙吧~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> OpenWrt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Android】android sdk build-tools sdk tools 历史版本下载地址</title>
      <link href="/2020/10/15/android-android-sdk-build-tools-sdk-tools-li-shi-ban-ben-xia-zai-di-zhi/"/>
      <url>/2020/10/15/android-android-sdk-build-tools-sdk-tools-li-shi-ban-ben-xia-zai-di-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="痛点"><a href="#痛点" class="headerlink" title="痛点"></a>痛点</h2><p>国内网络环境导致访问谷歌困难。无形的提高了开发门槛。</p><p>墙这东西，有好处也有坏。</p><p>挡住了外面要进来捣乱的人，也让里面的人出去不方便。</p><h2 id="先上结论"><a href="#先上结论" class="headerlink" title="先上结论"></a>先上结论</h2><h3 id="SDK下载地址"><a href="#SDK下载地址" class="headerlink" title="SDK下载地址"></a>SDK下载地址</h3><pre><code>例举4个,剩下请看下面的方法:Android SDK Platform 30:http://dl-ssl.google.com/android/repository/platform-30_r03.zipAndroid SDK Platform 29:http://dl-ssl.google.com/android/repository/platform-29_r05.zipAndroid SDK Platform 28:http://dl-ssl.google.com/android/repository/platform-28_r06.zipAndroid SDK Platform 27:http://dl-ssl.google.com/android/repository/platform-27_r03.zip</code></pre><h3 id="Android-SDK-Platform-Tools"><a href="#Android-SDK-Platform-Tools" class="headerlink" title="Android SDK Platform-Tools"></a>Android SDK Platform-Tools</h3><pre><code>http://dl-ssl.google.com/android/repository/platform-tools_r30.0.4-linux.zip</code></pre><h3 id="build-tools下载地址"><a href="#build-tools下载地址" class="headerlink" title="build tools下载地址"></a>build tools下载地址</h3><pre><code>Android SDK Build-Tools 30.0.2http://dl-ssl.google.com/android/repository/build-tools_r30.0.2-linux.zipAndroid SDK Build-Tools 30.0.1http://dl-ssl.google.com/android/repository/build-tools_r30.0.1-linux.zipAndroid SDK Build-Tools 30http://dl-ssl.google.com/android/repository/build-tools_r30-linux.zipAndroid SDK Build-Tools 29.0.3http://dl-ssl.google.com/android/repository/build-tools_r29.0.3-linux.zip</code></pre><h2 id="下载地址的组成"><a href="#下载地址的组成" class="headerlink" title="下载地址的组成"></a>下载地址的组成</h2><p>地址分为2部分，一个是<strong>基础地址</strong>，另一个是<strong>文件名</strong></p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>基础地址</p><pre><code>http://dl-ssl.google.com/android/repository/</code></pre><p>文件名</p><pre class=" language-shell"><code class="language-shell">build-tools_r23.0.3-windows.zip  # 表示下载23.0.3版本的build tools</code></pre><p>整个下载地址</p><pre><code>http://dl-ssl.google.com/android/repository/build-tools_r23.0.3-windows.zip</code></pre><h2 id="文件名如何确定"><a href="#文件名如何确定" class="headerlink" title="文件名如何确定?"></a>文件名如何确定?</h2><p>文件名在Android studio的清单文件中</p><p>地址:</p><pre><code>https://dl.google.com/android/repository/repository2-1.xml</code></pre><p><a href="https://cdn.jsdelivr.net/gh/amahv/cdn//file/repository2-1.xml" target="_blank" rel="noopener">GitHub备份地址</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载下来之后就是怎么安装的问题了</p><h4 id="Build-Tools"><a href="#Build-Tools" class="headerlink" title="Build-Tools"></a>Build-Tools</h4><p>下载并解压后，将解压出的整个文件夹复制或者移动到 <code>your sdk 路径/build-tools</code> /(版本号)  文件夹即可(需要现在文件夹内新建相应版本的文件夹)。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201015124054.png" alt=""></p><h4 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h4><p>下载并解压后，将解压出的整个文件夹复制或者移动到 <code>your sdk 路径/platforms</code>文件夹,然后重启Eclipse(或Android Studio)和SDK Manager。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201015124022.png" alt=""></p><h4 id="SDK-Platform-Tools"><a href="#SDK-Platform-Tools" class="headerlink" title="SDK Platform-Tools"></a>SDK Platform-Tools</h4><p>这是 adb, fastboot 等工具包。把解压出来的 <code>platform-tools</code> 文件夹放在 android sdk 根目录下，并把 <code>adb</code>所在的目录添加到系统 <code>PATH</code> 路径里，即可在命令行里直接访问了 adb, fastboot 等工具。(将原来的 <code>platform-tools</code>文件夹删掉)</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201015124830.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Android SDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Awtrix像素钟外壳版本说明</title>
      <link href="/2020/10/14/awtrix-xiang-su-zhong-wai-ke-ban-ben-shuo-ming/"/>
      <url>/2020/10/14/awtrix-xiang-su-zhong-wai-ke-ban-ben-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h2 id="查看本文件请使用Typora软件（或其他支持markdown的软件）"><a href="#查看本文件请使用Typora软件（或其他支持markdown的软件）" class="headerlink" title="查看本文件请使用Typora软件（或其他支持markdown的软件）"></a>查看本文件请使用Typora软件（或其他支持markdown的软件）</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/%E5%83%8F%E7%B4%A0%E9%92%9F%E7%88%86%E7%82%B8%E5%9B%BE_%E6%B8%B2%E6%9F%932.JPG" alt=""></p><h2 id="外壳版本说明"><a href="#外壳版本说明" class="headerlink" title="外壳版本说明"></a>外壳版本说明</h2><p>半吊子版本 V0.9</p><h2 id="我为什么设计这个外壳"><a href="#我为什么设计这个外壳" class="headerlink" title="我为什么设计这个外壳"></a>我为什么设计这个外壳</h2><p>网上找了一圈的外壳都没有合适的，来列几个槽点：</p><ol><li>官方外壳极其简陋，中间有缝。</li><li>网络上普遍的外壳都比较窄，有种立不住的感觉。</li><li>屏幕边框都巨厚，看起来很不美观。</li><li>没有柔性屏保持架，盒子打开屏幕跟着掉下来。</li><li>要使用胶水或者螺丝固定，拆装折腾麻烦。</li><li>没有电容按键的表示区域。</li><li>没有喇叭孔。不好安装喇叭。</li><li>使用的是同轴电源座，这种数据线在家里不常有，得单独配一根。</li><li>没有光敏电阻孔。</li><li>外形是四四方方，没有圆角，看起来非常生硬。</li></ol><p>根据以上的10个槽点，我作出了以下改进：</p><ol><li>全一体化3D打印，装配好之后看不到一颗螺丝孔，看不到安装缝。</li><li>后壳的长度为12cm，放在高处也可以非常稳固，不容易因为晃动掉下来。</li><li>屏占比约99%。（当然这只是算正面黑色部分的占比，有点水分，hhhhhh）</li><li>多画了一层柔性屏保持架，通过20颗钕磁铁和光栅紧紧地贴合在一起，非常稳固和方便。</li><li>全部的连接都采用磁吸的方式，不需要用螺丝。亚克力挡板用3M双面胶，因为这块东西粘上去之后不会再拆它了。</li><li>增加了顶部3个电容按键区域。</li><li>后壳上有一个安装小喇叭的位置。</li><li>使用的是type-c母座，5V的充电头和type-c数据线在家中随处可见。</li><li>后壳上有一个光敏电阻安装孔。</li><li>外壳的棱采用圆角设计，看起来不会那么生硬。</li></ol><h2 id="外壳使用前提"><a href="#外壳使用前提" class="headerlink" title="外壳使用前提"></a>外壳使用前提</h2><h3 id="自身素质"><a href="#自身素质" class="headerlink" title="自身素质"></a>自身素质</h3><ol><li>有耐心</li><li>爱折腾</li></ol><h3 id="具备技能"><a href="#具备技能" class="headerlink" title="具备技能"></a>具备技能</h3><ol><li><p>会使用3D模型编辑软件</p></li><li><p>具有一定钳工功底，会使用锉刀</p></li><li><p>会喷漆</p></li></ol><h2 id="外壳问题说明"><a href="#外壳问题说明" class="headerlink" title="外壳问题说明"></a>外壳问题说明</h2><p>因为我在设计的时候考虑装配得紧密一些，而店家声称的打印精度为0.1mm，所以我在需要装配的地方留的余量大概只有0.2mm，但是盒子大了，且是薄壁零件，有热胀冷缩的问题，导致打印完成之后无法顺利进行装配，需要用锉刀打磨才能装配进去。也是因为这样，我不敢把外壳公然挂到网上供大家下载，怕被喷成筛子。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>最近都比较忙，后续等我有时间了，我会慢慢升级我的像素钟。</p><h2 id="外壳实拍效果"><a href="#外壳实拍效果" class="headerlink" title="外壳实拍效果"></a>外壳实拍效果</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/c5e0fce925a1a04ac90c6165739420b.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/42d12eae2768d09026b82a4830dfbf1.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/5657a79b4abf090589b448c63b1705d.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/24bdd08bd91ba353e13d376fa725d9f.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 像素钟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 像素钟 </tag>
            
            <tag> Awtrix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Git】Git取消对文件的跟踪</title>
      <link href="/2020/10/13/git-git-qu-xiao-dui-wen-jian-de-gen-zong/"/>
      <url>/2020/10/13/git-git-qu-xiao-dui-wen-jian-de-gen-zong/</url>
      
        <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>直接上命令</p><pre class=" language-shell"><code class="language-shell">适用于文件夹:git rm -r --cached dir/适用于文件:  git rm --cached file想把刚才删除的文件添加回来: git add -f file预览操作加 -n 参数    例:  git rm -r -n --cached "bin/" #加上-n这个参数可以预览会删除的文件,但是不会执行任何实质性改动</code></pre><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><pre class=" language-shell"><code class="language-shell">-r:给定前导目录时,递归包含其目录下的所有文件和文件夹--cached:使用此选项可以取消提交并仅从索引中删除路径。 无论是否修改，工作树文件都将被保留。add -f :强制添加被.gitignore忽略的文件或文件夹</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Android】解决Android SSL peer shut down incorrectly无法下载pom包</title>
      <link href="/2020/10/13/android-jie-jue-android-ssl-peer-shut-down-incorrectly-wu-fa-xia-zai-pom-bao/"/>
      <url>/2020/10/13/android-jie-jue-android-ssl-peer-shut-down-incorrectly-wu-fa-xia-zai-pom-bao/</url>
      
        <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在导入一个新的工程后，你可能会遇到这样的问题：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201013130218.png" alt=""></p><p>这是由于国内网络环境导致仓库不可访问，由于google() 这个仓库地址是： <a href="https://dl.google.com/dl/android/maven2/com/可能会出现无法访问的情况，" target="_blank" rel="noopener">https://dl.google.com/dl/android/maven2/com/可能会出现无法访问的情况，</a> 这时候只需要<strong>优先</strong>使用国内的阿里云仓库就可以了；</p><p>NOTE： <strong>优先</strong></p><p>阿里云云效Maven：<a href="https://maven.aliyun.com/mvn/guide" target="_blank" rel="noopener">https://maven.aliyun.com/mvn/guide</a></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201013131639.png" alt=""></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>想要设置仓库的下载源地址，只要在文件目录的/android/build.gradle 文件中，将buildscript 的repositories 字段改成如下代码即可(顺序很重要)：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201013131913.png" alt=""></p><p>然后同步一下:</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201013132023.png" alt=""></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>本文参考:<a href="https://blog.csdn.net/XING979020/article/details/88372324" target="_blank" rel="noopener">解决Android无法正常https://dl.google.com/dl/android/maven2/com/的办法</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android studio </tag>
            
            <tag> Android </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jdk11，jdk15，高版本没有jre的解决方法</title>
      <link href="/2020/10/12/jdk11-jdk15-gao-ban-ben-mei-you-jre-de-jie-jue-fang-fa/"/>
      <url>/2020/10/12/jdk11-jdk15-gao-ban-ben-mei-you-jre-de-jie-jue-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>jdk11和jdk12在以前版本基础上，改动有点大，安装后默认是没有jre的。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>使用命令手动生成jre文件夹</p><ul><li>首先以管理员身份运行CMD</li><li>按顺序输入以下命令</li></ul><pre class=" language-powershell"><code class="language-powershell">cd C:\Program Files\Java\jdk_15bin\jlink<span class="token punctuation">.</span>exe <span class="token operator">--</span>module<span class="token operator">-</span>path jmods <span class="token operator">--</span>add<span class="token operator">-</span>modules java<span class="token punctuation">.</span>desktop <span class="token operator">--</span>output jre</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>一定要用管理员身份运行CMD</p><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20201012213056.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> JRE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picGo图床github配置CDN加速</title>
      <link href="/2020/09/21/picgo-tu-chuang-github-pei-zhi-cdn-jia-su/"/>
      <url>/2020/09/21/picgo-tu-chuang-github-pei-zhi-cdn-jia-su/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20200921164257.png" alt="配置截图"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> picGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android studio中文注释乱码</title>
      <link href="/2020/09/21/android-studio-zhong-wen-luan-ma/"/>
      <url>/2020/09/21/android-studio-zhong-wen-luan-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="感谢简书sayeverything的文章：Android-Studio-3-6稳定版-注释中文出现乱码解决方案"><a href="#感谢简书sayeverything的文章：Android-Studio-3-6稳定版-注释中文出现乱码解决方案" class="headerlink" title="感谢简书sayeverything的文章：Android Studio 3.6稳定版 注释中文出现乱码解决方案"></a>感谢简书sayeverything的文章：<a href="https://www.jianshu.com/p/ac7aea2a847d" target="_blank" rel="noopener">Android Studio 3.6稳定版 注释中文出现乱码解决方案</a></h1><p>其次感谢知乎holk的文章：<a href="https://zhuanlan.zhihu.com/p/110442356" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/110442356</a></p><p>在网上找了很多解决方案：</p><p>1：更改编码 File –&gt;setting —&gt; Editor—-&gt;File Encodings 修改编码未UTF - 8 (然而对我并没有用)</p><p>2：修改文件 打开文件安装目录下的bin文件 找到studio64.exe.vmoptions  与studio.exe.vmoptions  打开并在最后一行添加</p><p>​    -Dfile.encoding=UTF-8  （然而也不管用）</p><p>最后：偶然看到这位大哥的，才得以解决，要不然我估计的返回到低版本了</p><p>  <a href="https://zhuanlan.zhihu.com/p/110442356" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/110442356</a></p><p>3： File –&gt;setting —&gt; Appearance –&gt;Appearance  Antialiasing中的两个只都选择Greyscale 完美解决</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20200921163338.png" alt=""></p><p>从此可以开开心心使用新版本了</p><h1 id="Android-Studio-Build-Output-栏内汉字出现乱码的解决方案"><a href="#Android-Studio-Build-Output-栏内汉字出现乱码的解决方案" class="headerlink" title="Android Studio Build Output 栏内汉字出现乱码的解决方案"></a>Android Studio Build Output 栏内汉字出现乱码的解决方案</h1><p>就是图中红框内显示的毛病，Build Output栏中的汉字出现了乱码，其它地方都没有乱码。<br>此方案仅适用于图片中出现的乱码。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201014155606.png" alt=""></p><p>在Android studio安装目录中搜索 studio64.exe.vmoptions 文件</p><p>在文件末尾加上</p><pre><code>-Dfile.encoding=UTF-8</code></pre><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201014155844.png" alt=""></p><p>保存后重启Android studio</p><h3 id="有图有真相"><a href="#有图有真相" class="headerlink" title="有图有真相"></a>有图有真相</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn//picGo/20201014160108.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Android studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Altium Designer导出Gerber文件的步骤</title>
      <link href="/2020/09/04/altium-designer-dao-chu-gerber-wen-jian-de-bu-zou/"/>
      <url>/2020/09/04/altium-designer-dao-chu-gerber-wen-jian-de-bu-zou/</url>
      
        <content type="html"><![CDATA[<p><em>文章参考：<a href="https://blog.csdn.net/cheer_me/article/details/104470549" target="_blank" rel="noopener">https://blog.csdn.net/cheer_me/article/details/104470549</a></em></p><p>​        1.在整个Gerber文件导出过程中，我们<strong><em>\</em>一共需要导出3次才能完成**</strong>，分别为：导出非机械层、导出机械层、导出钻孔层。</p><p>​        2.在导出之前，你需要确保你的目录是干净的，在此之前你从来没有导出过gerber文件。如果之前有导出过，那么请你删掉相关的目录。这点是非常重要的。</p><h1 id="导出非机械层"><a href="#导出非机械层" class="headerlink" title="导出非机械层"></a>导出非机械层</h1><p>点击“File”-&gt;“Fabrication Outputs”-&gt;“Gerber Files”，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220110.png" alt=""></p><p>点击之后弹出Gerber设置窗口，有5个标签页，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220208.png" alt=""></p><p>General标签页，单位为Inches，格式为2:5，一般默认就是，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220238.png" alt=""></p><p>Layers标签页，只在左侧Layers To Plot中除机械层以外的Plot下打钩，Mirror下全部不打勾。另外有四个层的合集，这个和上面显示的层重复，全部不打勾。右侧的机械层不用勾选。将下方Include unconnected mid-layer pads勾选上，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220305.png" alt=""></p><p>Drill Drawing标签里的选项都不用选，直接跳过，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220342.png" alt=""></p><p>Apertures标签，只需要将Embedded apertures (RS274X)勾选即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220403.png" alt=""></p><p>Advanced标签页设置前导零，其它默认即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220423.png" alt=""></p><p>然后点击OK，一会就弹出CAMtastic1.Cam工程文件，直接关闭就行，不需要保存，如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220442.png" alt=""></p><p>到这里非机械层导出完成，下面导出机械层。</p><h1 id="导出机械层"><a href="#导出机械层" class="headerlink" title="导出机械层"></a>导出机械层</h1><p>同样点击“File”-&gt;“Fabrication Outputs”-&gt;“Gerber Files”弹出Gerber设置窗口，只需设置Layers和Drill Drawing两个标签即可，其它标签默认。</p><p>Layers标签，将左侧Layers To Plot中的勾全部取消，下方Include unconnected mid-layer pads也取消勾选。将右侧需要的机械层选中，这个根据自己使用的机械层进行选择。根据PCB，这里只需要选择Mechanical 1即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220644.png" alt=""></p><p>Drill Drawing标签，将Drill Drawing Plots和Drill Guide Plots下的Plot all used drill pairs都勾选即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220704.png" alt=""></p><p>设置好之后直接点击OK，同样也会弹出CAMtastic1.Cam工程文件，直接关闭就行，不需要保存，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220723.png" alt=""></p><p>到这里机械层导出完成，下面导出钻孔层。</p><h1 id="导出钻孔层"><a href="#导出钻孔层" class="headerlink" title="导出钻孔层"></a>导出钻孔层</h1><p>点击“File”-&gt;“Fabrication Outputs”-&gt;“NC Drill Files”，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220747.png" alt=""></p><p>点击之后弹出NC Drill设置窗口，将Leading/Trailing Zeroes下的Suppress leading zeroes勾选，其它默认即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220805.png" alt=""></p><p>设置好之后，点击OK，同样也会弹出CAMtastic1.Cam工程文件，同时有个Import Drill Data的弹窗，直接点击OK即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220822.png" alt=""></p><p>又弹出Import Mill/Route Data窗口，直接点击OK即可，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220838.png" alt=""></p><p>同样直接关闭工程就行，不需要保存，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220917.png" alt=""></p><p>到这里就完成了Gerber文件的导出，一般默认直接到PCB所在目录下有一个Project Outputs for XXX的文件夹，Gerber文件就在这个文件夹下，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904220935.png" alt=""></p><p>只要将这些文件全部打包，发给生产厂家即可。以上就是Altium Designer导出Gerber文件的全部过程。</p><h1 id="上传嘉立创"><a href="#上传嘉立创" class="headerlink" title="上传嘉立创"></a>上传嘉立创</h1><p>​        将文件夹压缩成zip后，我上传到嘉立创的平台上。嘉立创平台解析之后就会显示出我的文件的样子。</p><p>该怎么样就是怎么样，非常完美。</p><p>Gerber文件的好处就是屏蔽了各个软件之间版本和兼容性的问题，Gerber文件可以最大程度的保证PCB不会因为软件版本的问题而造成生产稿错误。</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200904221510.png" alt="上传到嘉立创平台后自动解析的效果"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> DXP </tag>
            
            <tag> Altium Designer </tag>
            
            <tag> gerber </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【内网穿透神器】ZeroTier远程访问局域网内web</title>
      <link href="/2020/09/01/nei-wang-chuan-tou-shen-qi-zerotier-yuan-cheng-fang-wen-ju-yu-wang-nei-web/"/>
      <url>/2020/09/01/nei-wang-chuan-tou-shen-qi-zerotier-yuan-cheng-fang-wen-ju-yu-wang-nei-web/</url>
      
        <content type="html"><![CDATA[<p>在今天以前我我所使用的内网穿透工具只有1个，那就是<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">frp</a>，虽然<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">frp</a>非常的好用，但是遇到把不常访问的网页服务映射出去就显得比较麻烦了，需要经过云服务器，云服务器侧需要配置nginx，如果有websocket还需要添加websocket的支持。而我大部分的网页都是不常访问的，且有些网页只支持局域网访问，若要映射到广域网上面，需要处理一大堆兼容和转发的问题。</p><p>直到今天，我遇到了<a href="https://www.zerotier.com/" target="_blank" rel="noopener">ZeroTier</a>,开启了我又一扇世界的新大门，对于远程访问局域网内的web页面，对比frp简直是降维打击。</p><p>简单的来说ZeroTier是一个VPN工具，可以免费提供个人使用，时间无限制，但是不能超过100台设备，速度也还行。</p><p>整个部署过程参考：<a href="https://post.smzdm.com/p/a4wmrk7k/" target="_blank" rel="noopener">https://post.smzdm.com/p/a4wmrk7k/</a></p><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p>略</p><h2 id="创建令牌"><a href="#创建令牌" class="headerlink" title="创建令牌"></a>创建令牌</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901165441.png" alt="创建令牌"></p><h2 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901165533.png" alt="创建网络"></p><h2 id="路由器端加入网络"><a href="#路由器端加入网络" class="headerlink" title="路由器端加入网络"></a>路由器端加入网络</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901165833.png" alt="路由器端配置"></p><p>在路由器加入网络后，zeroTier的后台会显示有设备接入，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901170216.png" alt="这台就是路由器"></p><p>另一台设备是我的电脑。</p><p>前面打上勾勾，代表确认设备，然后系统会自动分配一个IP给这个设备，就是：10.147.17.235。复制这串IP，用到下图的地方：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901171103.png" alt=""></p><h2 id="PC端下载软件后加入网络"><a href="#PC端下载软件后加入网络" class="headerlink" title="PC端下载软件后加入网络"></a>PC端下载软件后加入网络</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901171611.png" alt=""></p><p>加入网络后也会显示在后台，也把前面勾选上</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200901171813.png" alt=""></p><h2 id="然后就可以像在局域网内一样访问web服务了"><a href="#然后就可以像在局域网内一样访问web服务了" class="headerlink" title="然后就可以像在局域网内一样访问web服务了"></a>然后就可以像在局域网内一样访问web服务了</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
            <tag> ZeroTier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装MySQL 并设置远程访问</title>
      <link href="/2020/07/19/ubuntu-an-zhuang-mysql-bing-she-zhi-yuan-cheng-fang-wen/"/>
      <url>/2020/07/19/ubuntu-an-zhuang-mysql-bing-she-zhi-yuan-cheng-fang-wen/</url>
      
        <content type="html"><![CDATA[<h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><h3 id="APT安装"><a href="#APT安装" class="headerlink" title="APT安装"></a>APT安装</h3><p>安装mysql服务mysql-server</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt <span class="token function">install</span> mysql-server  <span class="token comment" spellcheck="true">#也可表示为mysql-server-x.x来指定版本，例如mysql-server-5.6</span></code></pre><h2 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> mysql_secure_installation</code></pre><p>首先便是要求设置root密码</p><pre><code>Securing the MySQL server deployment.Connecting to MySQL using a blank password.VALIDATE PASSWORD PLUGIN can be used to test passwordsand improve security. It checks the strength of passwordand allows the users to set only those passwords which aresecure enough. Would you like to setup VALIDATE PASSWORD plugin?Press y|Y for Yes, any other key for No: nPlease set the password for root here.New password:Re-enter new password:By default, a MySQL installation has an anonymous user,allowing anyone to log into MySQL without having to havea user account created for them. This is intended only fortesting, and to make the installation go a bit smoother.You should remove them before moving into a productionenvironment.Remove anonymous users? (Press y|Y for Yes, any other key for No) : ySuccess.Normally, root should only be allowed to connect from'localhost'. This ensures that someone cannot guess atthe root password from the network.Disallow root login remotely? (Press y|Y for Yes, any other key for No) : n ... skipping.By default, MySQL comes with a database named 'test' thatanyone can access. This is also intended only for testing,and should be removed before moving into a productionenvironment.Remove test database and access to it? (Press y|Y for Yes, any other key for No) : n ... skipping.Reloading the privilege tables will ensure that all changesmade so far will take effect immediately.Reload privilege tables now? (Press y|Y for Yes, any other key for No) : ySuccess.All done!</code></pre><p>可以依照上面的进行配置.</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><hr><pre class=" language-bash"><code class="language-bash">Securing the MySQL server deployment.Enter password <span class="token keyword">for</span> user root:Error: Can<span class="token string">'t connect to local MySQL server through socket '</span>/var/run/mysqld/mysqld.sock' <span class="token punctuation">(</span>2<span class="token punctuation">)</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200719223132.png" alt="错误截图"></p><p>解决方法:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> mysql stop<span class="token function">sudo</span> <span class="token function">service</span> mysql start</code></pre><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200719223244.png" alt="截图"></p><h2 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> mysql -u root -p            <span class="token comment" spellcheck="true"># 注意,需要加sudo</span></code></pre><h2 id="设置远程访问"><a href="#设置远程访问" class="headerlink" title="设置远程访问"></a>设置远程访问</h2><p>需要设置 mysql 数据库支持外部或者远程访问，则需要把绑定 IP 地址改为 0.0.0.0，或者不写IP地址。因此编辑配置文件：</p><pre><code>sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p>修改绑定地址为 0.0.0.0。原来默认绑定 127.0.0.1 注释掉。</p><pre class=" language-bash"><code class="language-bash">bind-address <span class="token operator">=</span> 0.0.0.0<span class="token comment" spellcheck="true"># bind-address = 127.0.0.1</span></code></pre><p>然后登入MySQL</p><pre><code>sudo mysql -u root -p mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '您的数据库密码' WITH GRANT OPTION;</code></pre><p>同时刷新权限</p><pre class=" language-bash"><code class="language-bash">flush privileges<span class="token punctuation">;</span></code></pre><p>修改完 mysqld.cnf 文件有最好重新启动服务器。</p><pre><code>systemctl restart mysql.service</code></pre><h2 id="远程访问MySQL"><a href="#远程访问MySQL" class="headerlink" title="远程访问MySQL"></a>远程访问MySQL</h2><pre><code>sudo mysql -h 192.168.123.165 -u root -p -P 3306</code></pre><p>-h: 远程主机IP地址</p><p>-P: 远程端口</p><h2 id="跳过密码直接登入MySQL"><a href="#跳过密码直接登入MySQL" class="headerlink" title="跳过密码直接登入MySQL"></a>跳过密码直接登入MySQL</h2><p>通过修改以下文件可以直接跳过密码登录MySQL</p><pre><code>sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p>在文件最后行加上下面这句</p><pre class=" language-bash"><code class="language-bash">skip-grant-tables</code></pre><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200719224313.png" alt="修改后的截图"></p><p>修改后保存并退出编辑。</p><p>然后去登录mysql，需要输入密码的时候直接敲回车。</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h3 id="解决-MySQL-的-ERROR-1698-28000-Access-denied-for-user-‘root’-’localhost’"><a href="#解决-MySQL-的-ERROR-1698-28000-Access-denied-for-user-‘root’-’localhost’" class="headerlink" title="解决 MySQL 的 ERROR 1698 (28000): Access denied for user ‘root’@’localhost’"></a>解决 MySQL 的 ERROR 1698 (28000): Access denied for user ‘root’@’localhost’</h3><p>因为在最近的Ubuntu安装（当然也可能是其他安装）中，MySQL默认使用了UNIX auth_socket plugin插件。</p><p>简单来说这意味着当db_users使用数据库时，<strong>将会通过系统用户认证表进行认证</strong>。你可以通过下面的命令看看你的root用户是否设置成了这样：</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">sudo</span> mysql -u root <span class="token comment" spellcheck="true"># I had to use "sudo" since is new installation</span>mysql<span class="token operator">></span> USE mysql<span class="token punctuation">;</span>mysql<span class="token operator">></span> SELECT User, Host, plugin FROM mysql.user<span class="token punctuation">;</span>+------------------+-----------------------+<span class="token operator">|</span> User             <span class="token operator">|</span> plugin                <span class="token operator">|</span>+------------------+-----------------------+<span class="token operator">|</span> root             <span class="token operator">|</span> auth_socket           <span class="token operator">|</span><span class="token operator">|</span> mysql.sys        <span class="token operator">|</span> mysql_native_password <span class="token operator">|</span><span class="token operator">|</span> debian-sys-maint <span class="token operator">|</span> mysql_native_password <span class="token operator">|</span>+------------------+-----------------------+</code></pre><p>就像你在查询语句中看到的那样，root用户在使用auth_socket插件。：</p><p><strong>1. 你可以设置你的root用户使用mysql_native_password插件</strong> </p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">sudo</span> mysql -u root <span class="token comment" spellcheck="true"># I had to use "sudo" since is new installation</span>mysql<span class="token operator">></span> USE mysql<span class="token punctuation">;</span>mysql<span class="token operator">></span> UPDATE user SET plugin<span class="token operator">=</span><span class="token string">'mysql_native_password'</span> WHERE User<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span>mysql<span class="token operator">></span> FLUSH PRIVILEGES<span class="token punctuation">;</span>mysql<span class="token operator">></span> <span class="token keyword">exit</span><span class="token punctuation">;</span>$ <span class="token function">service</span> mysql restart</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWTRIX2.0像素时钟制作</title>
      <link href="/2020/07/18/awtrix2-0-xiang-su-shi-zhong-zhi-zuo/"/>
      <url>/2020/07/18/awtrix2-0-xiang-su-shi-zhong-zhi-zuo/</url>
      
        <content type="html"><![CDATA[<h2 id="项目官方网站"><a href="#项目官方网站" class="headerlink" title="项目官方网站"></a>项目官方网站</h2><p><a href="https://awtrixdocs.blueforcer.de/" target="_blank" rel="noopener">https://awtrixdocs.blueforcer.de/</a>(打开有点慢的…)</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718151114.png" alt="AWTRIX" style="zoom:50%;"><h2 id="材料准备"><a href="#材料准备" class="headerlink" title="材料准备"></a>材料准备</h2><table><thead><tr><th align="left">No</th><th>Name</th><th>链接</th><th>金额</th></tr></thead><tbody><tr><td align="left">1</td><td>NodeMCU（必选）</td><td><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.6b392e8dBRBXRn&amp;id=542658326644&amp;_u=iuv1t82a050" target="_blank" rel="noopener">click here</a></td><td>￥12</td></tr><tr><td align="left">2</td><td>32x8 全彩RGB屏（必选）</td><td><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.29472e8dHGsQWL&amp;id=579131402474&amp;_u=iuv1t8217ac" target="_blank" rel="noopener">click here</a></td><td>￥70</td></tr><tr><td align="left">3</td><td>Awtrix 外壳</td><td><a href="https://www.thingiverse.com/thing:2791276" target="_blank" rel="noopener">click here</a></td><td>￥305</td></tr><tr><td align="left">4</td><td>DF Mini Player</td><td><a href="https://detail.tmall.com/item.htm?id=611277941885&amp;spm=a1z09.2.0.0.29472e8dHGsQWL&amp;_u=iuv1t827686" target="_blank" rel="noopener">click here</a></td><td>￥4.7</td></tr><tr><td align="left">5</td><td>3w 30mm全频喇叭</td><td><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.29472e8dHGsQWL&amp;id=559136696205&amp;_u=iuv1t825d29" target="_blank" rel="noopener">click here</a></td><td>￥14.98</td></tr><tr><td align="left">6</td><td>树莓派4B 4G</td><td><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.29472e8dHGsQWL&amp;id=596761703325&amp;_u=iuv1t82ecc5" target="_blank" rel="noopener">click here</a></td><td>￥390</td></tr><tr><td align="left">7</td><td>树莓派外壳</td><td><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.29472e8dHGsQWL&amp;id=608817078527&amp;_u=iuv1t82ee03" target="_blank" rel="noopener">click here</a></td><td>￥24.8</td></tr><tr><td align="left"></td><td></td><td>合计</td><td>￥821.48</td></tr></tbody></table><p><em>note：外壳的价格是预估的，我还没做……</em></p><p><em>还有一些杂碎的东西就不写了，如电源、TF卡、杜邦线、插座等……</em></p><h2 id="ESP8266固件烧写"><a href="#ESP8266固件烧写" class="headerlink" title="ESP8266固件烧写"></a>ESP8266固件烧写</h2><p>固件烧写有2种方法。第一种是不需要折腾的，直接按照官方给的步骤来。第二种是需要克隆源码，并且编译的，使用platformIO下载。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="安装python3环境"><a href="#安装python3环境" class="headerlink" title="安装python3环境"></a>安装python3环境</h4><p>略…</p><h4 id="安装git环境"><a href="#安装git环境" class="headerlink" title="安装git环境"></a>安装git环境</h4><p>略…</p><h4 id="安装pyserial"><a href="#安装pyserial" class="headerlink" title="安装pyserial"></a>安装pyserial</h4><pre><code>pip install pyserial</code></pre><p><em>如果这个不会安装,那我觉得制作这个项目对你来说门槛太高了,直接淘宝买成品吧 ! 三百多块钱搞定, 还要啥自行车……….</em></p><h4 id="下载esptool"><a href="#下载esptool" class="headerlink" title="下载esptool"></a>下载esptool</h4><p>windows\Linux\mac下都行</p><pre class=" language-shell"><code class="language-shell">git clone https://github.com/themadinventor/esptool.git</code></pre><h4 id="安装platformIO-IDE"><a href="#安装platformIO-IDE" class="headerlink" title="安装platformIO IDE"></a>安装platformIO IDE</h4><h5 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h5><p>略…</p><h5 id="安装platformIO插件"><a href="#安装platformIO插件" class="headerlink" title="安装platformIO插件"></a>安装platformIO插件</h5><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718153948.png" alt=""></p><h3 id="方法一-官方推荐方法"><a href="#方法一-官方推荐方法" class="headerlink" title="方法一:官方推荐方法"></a>方法一:官方推荐方法</h3><p>官方推荐在Linux\mac系统下执行以下命令,这里我使用的是windows,所以给出的命令和官方的有所不同.</p><h4 id="下载固件"><a href="#下载固件" class="headerlink" title="下载固件"></a>下载固件</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> esptool        <span class="token comment" spellcheck="true"># 进入到esptool目录</span><span class="token function">wget</span> -h https://blueforcer.de/awtrix/stable/firmware.bin</code></pre><h4 id="擦除ESP8266Flash"><a href="#擦除ESP8266Flash" class="headerlink" title="擦除ESP8266Flash"></a>擦除ESP8266Flash</h4><pre class=" language-bash"><code class="language-bash">python3 esptool.py --port COM21 erase_flash</code></pre><p><em>COM口根据实际情况决定</em></p><h4 id="烧写固件到ESP8266"><a href="#烧写固件到ESP8266" class="headerlink" title="烧写固件到ESP8266"></a>烧写固件到ESP8266</h4><pre class=" language-bash"><code class="language-bash">python esptool.py --port COM21 write_flash 0x00000 firmware.bin</code></pre><p>如果几秒钟后读出类似的输出</p><pre class=" language-bash"><code class="language-bash">Connecting<span class="token punctuation">..</span><span class="token punctuation">..</span>Erasing flash<span class="token punctuation">..</span><span class="token punctuation">..</span>. Writing at 0x0000000000<span class="token punctuation">..</span>. <span class="token punctuation">(</span>0 %<span class="token punctuation">)</span></code></pre><p>说明一切都很好…</p><h3 id="方法二-源码编译方法-推荐"><a href="#方法二-源码编译方法-推荐" class="headerlink" title="方法二:源码编译方法 (推荐)"></a>方法二:源码编译方法 (推荐)</h3><ol><li>找一个目录,作为你的workspace,然后克隆0.22版本的源码（Master版本的好像有问题）</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone -b 0.22 https://github.com/awtrix/AWTRIX2.0-Controller.git</code></pre><ol start="2"><li><p>打开vscode</p></li><li><p>在vscode种打开awtrix目录</p></li><li><p>等待platform IO自动初始化好</p></li><li><p>修改platformio.ini文件. 因为我使用的是nodeMCU,所以将board改为nodemcuv2,其实不改也不影响的. 如图</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718155601.png" style="zoom:50%;"></li><li><p>点击→ , 执行编译并烧写</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718155901.png" style="zoom: 67%;"><ol start="7"><li><p>烧写成功后的样子</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718160127.png" alt=""></p></li></ol></li></ol><h3 id="烧写好后的配置"><a href="#烧写好后的配置" class="headerlink" title="烧写好后的配置"></a>烧写好后的配置</h3><ol><li><p>刷好固件后可以在手机端看到这个热点</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718162753.png" style="zoom:50%;"><ol start="2"><li><p>连接热点,密码为: awtrixxx</p></li><li><p>然后会出现以下界面</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/Screenshot_2020-07-18-16-06-26-014_com.android.htmlviewer.jpg" style="zoom: 33%;"></li></ol></li><li><p>配置要连接的WiFi,和WiFi密码,下面的IP地址是Awtrix服务器的IP地址,这里我填写的是我树莓派的IP地址, 端口保持不变. </p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/Screenshot_2020-07-18-16-06-58-857_com.android.htmlviewer.jpg" style="zoom: 33%;"></li></ol><h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><ul><li>服务器端的搭建也有2种方式<ul><li>官方脚本安装</li><li>Docker安装 (推荐)</li></ul></li></ul><h3 id="官方脚本安装"><a href="#官方脚本安装" class="headerlink" title="官方脚本安装"></a>官方脚本安装</h3><hr><p>官方这里好像只提供了Linux\macOS这2个系统的安装脚本，而windows的只提供了jar包。</p><p>所以windows用户要用的话最好就是使用docker安装了，也就是下面要讲的第二种方法。</p><p>不过我觉得这个服务端完全是没有必要安装在windows机器上面的，原因有这么几点：</p><ol><li>Windows系统的电脑一般都性能较高，一般来讲这是好事，但是对于长期需要开机的轻量应用服务器而言，这无谓地增加了功耗。</li><li>Windows的大部分配置都在图形化界面下完成，且不利于远程操控。虽然Windows也支持命令行配置，但是我想在2020年了，没有必要再去琢磨Windows下命令行下配置的各种技巧，花这点精神在Linux机子上面，你会事半功倍。</li><li>其实这个服务端是可以放在阿里云等各云服务器厂商上面的，这样你可以直接不用自己再买个树莓派作为服务器供着，而小带宽服务器是最实惠的，最低可以￥24元一个月，1M的小带宽用命令行操控是最舒服的，用Windows远程桌面的话，就是非主流搞法了。</li><li>服务器和桌面个人电脑在性能上面的观念是不同的，服务器讲究可靠性高、功耗越低越好、在功耗低的情况下性能越高越好。但是我们在购买个人电脑的时候，似乎只需要性能，功耗都不是问题，要多大水冷排？我加就完事儿了！！！！哈哈哈哈哈哈哈哈哈</li></ol><hr><h4 id="执行安装命令"><a href="#执行安装命令" class="headerlink" title="执行安装命令"></a>执行安装命令</h4><pre class=" language-bash"><code class="language-bash">在SSH终端中输入以下命令以自动安装<span class="token function">wget</span> -N https://blueforcer.de/awtrix/awtrix.sh <span class="token punctuation">;</span> <span class="token function">sudo</span> sh awtrix.sh</code></pre><p><em>note: 启动后不久，即可通过<a href="http://awtrix_ip:7000/" target="_blank" rel="noopener">http：// awtrix_ip：7000</a>访问Web界面。</em></p><h4 id="Docker安装（推荐）"><a href="#Docker安装（推荐）" class="headerlink" title="Docker安装（推荐）"></a>Docker安装（推荐）</h4><h5 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h5><p>首先你准备一台Linux服务器，可以是树莓派，或者是云服务器。</p><p>我这里以树莓派Debian作为示例。</p><h6 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h6><p><a href="https://www.runoob.com/docker/debian-docker-install.html" target="_blank" rel="noopener">Debian Docker 安装</a></p><h6 id="docker加速"><a href="#docker加速" class="headerlink" title="docker加速"></a>docker加速</h6><p><a href="https://blog.amahv.cn/2020/07/17/ru-he-ti-gao-docker-de-xia-zai-su-du-pei-zhi-guo-nei-yuan/">如何提高Docker的下载速度—–配置国内源</a></p><h5 id="安装Awtrix"><a href="#安装Awtrix" class="headerlink" title="安装Awtrix"></a>安装Awtrix</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> docker run -d -v pwd:/data --name AwTriX2 -p 7000:7000 -p 7001:7001 -p 5568:5568/udp --restart always -e TZ<span class="token operator">=</span>Europe/Berlin whyet/awtrix2:latest-arm -e JAVA_TOOL_OPTIONS<span class="token operator">=</span><span class="token string">"-Duser.language=zh -Duser.country=CN"</span></code></pre><h6 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h6><p>-d : 代表后台运行。</p><p>For persistent Data add: </p><pre class=" language-bash"><code class="language-bash">-v pwd:/data        <span class="token comment" spellcheck="true"># 这个参数应该是保存配置用的</span></code></pre><p>设置语言</p><pre class=" language-bash"><code class="language-bash">-e JAVA_TOOL_OPTIONS<span class="token operator">=</span><span class="token string">"-Duser.language=zh -Duser.country=CN"</span></code></pre><hr><p>因为是后台运行了,所以要需要输入命令才能查看Docker日志：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> docker logs AwTriX2            <span class="token comment" spellcheck="true"># 查看进程日志</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718235239.png" alt="成功截图"></p><p>日志中出现100%的时候,就代表你的服务端安装完成了。</p><hr><h6 id="使用浏览器访问服务端"><a href="#使用浏览器访问服务端" class="headerlink" title="使用浏览器访问服务端"></a>使用浏览器访问服务端</h6><pre class=" language-bash"><code class="language-bash">http://xxx.xxx.xxx.xxx:7000            <span class="token comment" spellcheck="true"># IP地址为树莓派的IP地址</span></code></pre><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200718235621.png" alt="效果图" style="zoom: 33%;"><p>有人可能注意到了,我的web面板跟网上别的同学的不同，为什么？我也不知道，大概可能的原因就是我的是docker方式安装的，可能版本不太一样。</p><p>您可能还注意到了，我的面板竟然是中文的！！网上别的同学都是英文面板啊。所以这里就要教大家设置中文了。</p><hr><h6 id="设置中文语言"><a href="#设置中文语言" class="headerlink" title="设置中文语言"></a>设置中文语言</h6><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200719010702.png" alt="设置语言" style="zoom: 33%;"><p>然后按下Ctrl+F5刷新网页，看有没有中文？</p><p>如果没有，那就需要重启docker</p><h6 id="重启docker镜像"><a href="#重启docker镜像" class="headerlink" title="重启docker镜像"></a>重启docker镜像</h6><p>重启非常简单，一条命令搞定：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> docker restart AwTriX2</code></pre><p>到这里，我忽然发现用docker真的爽，我也是第二次用docker，这次对docker有了更深的认识，部署神器！！！</p><hr><h2 id="配置nginx（可选）"><a href="#配置nginx（可选）" class="headerlink" title="配置nginx（可选）"></a>配置nginx（可选）</h2><p>这里为什么要配置nginx呢？因为为了一个像素钟专门购买一个树莓派其实有点不划算，我买树莓派是因为有别的用处才花这大价钱买的，如果纯粹只是想低成本搭建一个像素钟可以有很多种方案替代树莓派的。</p><ul><li><p>这里推荐几种比较正经的方案，非主流方案不在本博客的讨论范围🙂：</p><ul><li>云服务器</li><li>群晖NAS</li><li>软路由</li></ul><p>这里为什么选择这几种方案是有原因的，首先awtrix需要一直连接服务器的，所以个人电脑就不是那么合适了，有些人会说：“个人电脑我也可以不关机让它一直运行啊”。个人电脑是比较费电的，当然这个费电是相对而言的，相比软路由和nas会更费电，其实还有最重要的一点是个人电脑不是免维护的，运行时间长了需要检查风扇有没有积灰，有没有坏掉，长期不间断运行灰尘肯定是个很大的问题，风扇的存在使得这个方案不是那么合理了。所以最优选择是云服务器，其次就是群晖nas和软路由。不过nas和软路由连我都没有配置，所以云服务器应该是最适合大家的了。</p><p>进入正题……</p></li></ul><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p><em>参考：<a href="https://www.nginx.cn/doc/setup/nginx-ubuntu.html" target="_blank" rel="noopener">https://www.nginx.cn/doc/setup/nginx-ubuntu.html</a></em></p><p>以Debian系统为例，执行以下操作：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt update            <span class="token comment" spellcheck="true"># 更新软件源</span><span class="token function">sudo</span> apt <span class="token function">install</span> nginx    <span class="token comment" spellcheck="true"># 安装nginx</span></code></pre><p>装完应该能正常运行了。如果之前有装APACHE要改下端口。。。或者直接</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt remove apache2<span class="token function">sudo</span> /etc/init.d/nginx stop<span class="token function">sudo</span> /etc/init.d/nginx start</code></pre><p>安装php-cgi</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt <span class="token function">install</span> php-cgi</code></pre><p>Debian下是/etc/php/7.3/cgi/php.ini<br>之前有安装过php的话会复制apache的配置文件<br>打开cgi.fix_pathinfo选项：<br>cgi.fix_pathinfo=1;</p><h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /etc/nginx/conf.d            <span class="token comment" spellcheck="true"># 进入nginx的配置目录</span><span class="token function">sudo</span> <span class="token function">touch</span> awtrix.conf            <span class="token comment" spellcheck="true"># 创建awtrix.conf文件</span><span class="token function">sudo</span> vim awtrix.conf            <span class="token comment" spellcheck="true"># 编辑awtrix.conf文件</span></code></pre><p>在awtrix.conf文件中填入以下内容:</p><pre class=" language-bash"><code class="language-bash">upstream awtrix <span class="token punctuation">{</span>        server 127.0.0.1:7000<span class="token punctuation">;</span>        keepalive 64<span class="token punctuation">;</span><span class="token punctuation">}</span>server <span class="token punctuation">{</span>        listen       80<span class="token punctuation">;</span>        server_name awtrix.amahv.cn<span class="token punctuation">;</span>        location / <span class="token punctuation">{</span>                proxy_redirect off<span class="token punctuation">;</span>                proxy_pass http://awtrix<span class="token punctuation">;</span>                proxy_set_header Host <span class="token variable">$host</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true"># 支持webSocket</span>                proxy_http_version 1.1<span class="token punctuation">;</span>                proxy_set_header Upgrade <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>                proxy_set_header Connection <span class="token string">"upgrade"</span><span class="token punctuation">;</span>                proxy_read_timeout 86400<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>然而由于 awtrix 的 Web Interface 中有很多依托于 WebSocket 存在的内容，所以我们还得想办法让 nginx 反向代理支持 WebSocket。nginx/1.14.2 已经支持 WebSocket 了，所以我们只需要配置 nginx 正确处理 WebSocket 的 Upgrade 请求头即可。</p><p>最后保存退出。</p><p>执行</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> nginx -s reload        <span class="token comment" spellcheck="true"># 使配置重载并且生效</span></code></pre><hr><p>这里特别说明一下，我并没有配置ssl证书，有很多同学的nginx配置里面增加了ssl证书这一项，我觉得完全用不到吧！这个web端的安全性无所谓，其次证书还要一年到期更换一次，而我想要的就是免维护的一个服务端，越简单越好！</p><hr><h2 id="外壳改进"><a href="#外壳改进" class="headerlink" title="外壳改进"></a>外壳改进</h2><p>网上找了一圈的外壳都没有合适的，来列几个槽点：</p><ol><li>官方外壳极其简陋，中间有缝。</li><li>网络上普遍的外壳都比较窄，有种立不住的感觉。</li><li>屏幕边框都巨厚，看起来很不美观。</li><li>没有柔性屏保持架，盒子打开屏幕跟着掉下来。</li><li>要使用胶水或者螺丝固定，拆装折腾麻烦。</li><li>没有电容按键的表示区域。</li><li>没有喇叭孔。不好安装喇叭。</li><li>使用的是同轴电源座，这种数据线在家里不常有，得单独配一根。</li><li>没有光敏电阻孔。</li><li>外形是四四方方，没有圆角，看起来非常生硬。</li></ol><p>根据以上的10个槽点，我作出了以下改进：</p><ol><li>全一体化3D打印，装配好之后看不到一颗螺丝孔，看不到安装缝。</li><li>后壳的长度为12cm，放在高处也可以非常稳固，不容易因为晃动掉下来。</li><li>屏占比约99%。（当然这只是算正面黑色部分的占比，有点水分，hhhhhh）</li><li>多画了一层柔性屏保持架，通过20颗钕磁铁和光栅紧紧地贴合在一起，非常稳固和方便。</li><li>全部的连接都采用磁吸的方式，不需要用螺丝。亚克力挡板用3M双面胶，因为这块东西粘上去之后不会再拆它了。</li><li>增加了顶部3个电容按键区域。</li><li>后壳上有一个安装小喇叭的位置。</li><li>使用的是type-c母座，5V的充电头和type-c数据线在家中随处可见。</li><li>后壳上有一个光敏电阻安装孔。</li><li>外壳的棱采用圆角设计，看起来不会那么生硬。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/%E5%83%8F%E7%B4%A0%E9%92%9F%E7%88%86%E7%82%B8%E5%9B%BE_%E6%B8%B2%E6%9F%932.JPG" alt="成品爆炸图"></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/%E5%90%8E%E5%A3%B3%E8%83%8C%E9%9D%A2_%E6%B8%B2%E6%9F%93.JPG" alt=""></p><h2 id="组装"><a href="#组装" class="headerlink" title="组装"></a>组装</h2><p>未完待续……</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> AWTRIX </tag>
            
            <tag> 像素钟 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何提高Docker的下载速度-----配置国内源</title>
      <link href="/2020/07/17/ru-he-ti-gao-docker-de-xia-zai-su-du-pei-zhi-guo-nei-yuan/"/>
      <url>/2020/07/17/ru-he-ti-gao-docker-de-xia-zai-su-du-pei-zhi-guo-nei-yuan/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在正常情况下，docker默认连接的国外官方镜像，在国外的网友访问该官方镜像自然不成问题，中国的网络访问国外官方镜像网速一向很慢，而且往往还会遭遇断网的窘境。docker pull 国内网络链接失败或很卡慢，一般都需要更换至国内。</p><h3 id="目前有哪些-Docker-国内加速器："><a href="#目前有哪些-Docker-国内加速器：" class="headerlink" title="目前有哪些 Docker 国内加速器："></a>目前有哪些 Docker 国内加速器：</h3><p> Docker中国区官方、网易、阿里云、ustc 等；根据自己情况选择一个。<br>各个镜像下面是详细列表：</p><pre><code>Docker中国区官方               "https://registry.docker-cn.com"网易                          "http://hub-mirror.c.163.com"  ustc                          "https://docker.mirrors.ustc.edu.cn"阿里云                        "https://kfwkfulq.mirror.aliyuncs.com"</code></pre><h3 id="开始配置加速器"><a href="#开始配置加速器" class="headerlink" title="开始配置加速器"></a>开始配置加速器</h3><p>1）修改 /etc/docker/daemon.json 文件，执行命令：</p><pre class=" language-shell"><code class="language-shell">sudo vim /etc/docker/daemon.json </code></pre><p> 2）修改为如下形式：</p><pre class=" language-shell"><code class="language-shell">{ "registry-mirrors": ["https://kfwkfulq.mirror.aliyuncs.com"]} </code></pre><p>3) 重启Docker,以使docker的配置文件生效。</p><pre class=" language-shell"><code class="language-shell">service docker restart</code></pre><p>好啦，配置Docker加速完成。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下文件名批量编号</title>
      <link href="/2020/07/17/linux-xia-wen-jian-ming-pi-liang-bian-hao/"/>
      <url>/2020/07/17/linux-xia-wen-jian-ming-pi-liang-bian-hao/</url>
      
        <content type="html"><![CDATA[<p>而我们在编写程序时，往往希望读入的这些数据集的文件名是一种更简洁的形式，比如按照索引(index)方式：1.png，2.png，3.png…，那么如何批量重命名一个文件夹下的文件名呢？方法很简单，只需要在Terminal里面进入数据集所在的文件夹，输入以下命令即可：</p><pre class=" language-shell"><code class="language-shell">i=1; for x in *; do mv $x $i.png; let i=i+1; done</code></pre><p>重命名后的数据集如下，可以看到文件名已经变成了按数字索引编号，这样就不用担心程序难以适配不同数据集数据的问题了：</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200717121025.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3t-audio</title>
      <link href="/2020/07/15/3t-audio/"/>
      <url>/2020/07/15/3t-audio/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="81b0d278067d05c1a119edefa59288834682ea47732fbaae85cf4fde205f2dfa">2520dcaaeed742ecb4f0e14859944dfe113b3b802a4ae386e99bbd6b2655f5943c49542ebc34e89646eb96e3f7602beb7f938d7407c071d1b359c92d788581ebea96745bf3b0b38d365d85311f7f36985bfa8139f04a5d7fa312e95368381de25da9fd10f0217c8a63a089ebffcf137386117059d53200144612200b4b9cb6109722e216837356d957cd649b86d67d7ffa4aeae388e4227bee08d53512248f9b313cedd1f2c0b454a28d37b64389e187c7c1c0070a54153ea9fec5d013df6d967d34dd377e12f5dd8fb228f213d7e3986cfa1c8f722f25b0a68f1f8681c871d1deaa12a6fe27158428740eb6b2fdde78e232dbf2e10972bd6d39987d9be4afde24f5240bec76e3d22f760f425092105f4655bd9448bc43def2566d3744ddbaa3ee05a218cf495adfff8b48884b5f611f04ec7f53e3e2e01f0620d4383297ced5baa494913aeb1ee7ca0bfab4dd973b72cecbe14064fc3f0cd200581b04285b80b7940ec8275731efe09f90bd8ad4bf60a74abd119f384b20773fa246c7db289d9f86783570d92bc3a432b210bb08d1a6b6b69c5e5b0ca99a30aa39ed81fcf2761f0450e1bed18fcc52065f1bdd645d4a020c5527a2bf0bcccca113c12dfcf26557f4067746037230710cd3e378cfa429cb76716e7acc82b87ee2dd36ef423e7e3b0b5789dcd376d2d46ad9fc1c3abbc33e6789130c8ce80ec71b2101c991b4f0cfa8e6338518d0bbaa5348532a54bd3588de833d1ba9e05bb6a44847e6c30c643504c2acd5b10e08cd9fcc4a9750b67b37a344314d05eae16b05c7f9fcba6ec92c6f38b741fcf28b31e0d3571dbb2d27e0aa4d1ac12f861de470c4844789bc73aecef4f524970e087e6da5a0d9c33cd72a103631825db5523d637b9ee506ff3c94765b36455c31a16b6bd6e6c5201efe3c8e891c79e02be047d5d0136f245274c49e9fbe86ac5cc5fc5f63328bfce7128a69015a47de23e480f8d76910ea0aba8f022430ab78a027256cf040f0679c8fbbbb2b2f5e1de7ff78f6cf48bbb314761b9575f4900292f04ab9c8bc94de23236652c74ffe3a05f36ef1c9ae4a66dd216cd409d399e69aefdd69bb16f7162c9b40c3e452f57b29d68c791b3f80e1d40da6d095be70770ccc79d40354e10ffd5c2c284866700dc59fd354bc9e319f629eefdb5a13e5e30ff3176d897252ed965810f75196f7bd4146e29814df9e2e8459458dbd88e22a571ead875bb3a84c74691e4224789d5a11224d4ae2da6459673112f58b4e1040a9cce68a576b32c5dd2ab6ef845300d6b58786b865ae39996049e00fd23f866d45d2f1dc2414920238ce9a0535bdf163121b76dd644a621172d159a232fad3ecc18c797de5cc9a8d1680880494ec169d31893734e9e37bf1e85bbc0d918d5759228a03acde1809d565d90edaa55876b16cced183cde8f75b71fbfa5321e6cb7f2ef2b05804933cb4e218c821495d4be44a7bb1a503863df6f9943c4d9d0d06710c12817a0ad041adbd3a0ea6a92606a61ed2f57db552da33b1a8aeb8d35408817c475054bfa9b2c0de2f12268d32b00599f2b07df189b38b971cd6bdc34777bb8b2232a93e361040f59e1e7f83c586d077fb2c22a76f5fe0eb5ff002aa4aee3878b8228a6eaa75921da52e8ce2d657c57f8e81b0b353f43fab09968688c06c6419178623950aa95df4b70034eb7d3712d4b62baf2979c4ebb26c096bc977aa249f6cd20cd58654412fbae60e7fd9d4d52ccd701ef32a6c47be841086eaa8e44bed8bd6882a3a7a6af8b76248347a65a5c4a736c7a6e007a8300f8d768db7c469084bd78938ff894ce45a94f0b5532c5c755ca629d0a8eb7b18cc905c3c3ac7a90e05738fc0bc5a9fe4517c94f8ad93a6770f709ee0d1bb646217ce8ccd229d6e6bb32fdb9152de41444223ab78b096d7e60f072f131e084982e1ec5b4f4b5cc44bc596e4d9caf07bf28f1f963a7b714905c4c351daada3dc2055</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于openwrt固件搭建KMS服务器激活WINDOWS+OFFICE</title>
      <link href="/2020/07/13/ji-yu-openwrt-gu-jian-da-jian-kms-fu-wu-qi-ji-huo-windows-office/"/>
      <url>/2020/07/13/ji-yu-openwrt-gu-jian-da-jian-kms-fu-wu-qi-ji-huo-windows-office/</url>
      
        <content type="html"><![CDATA[<p><em>原文：<a href="https://www.bilibili.com/read/cv1712931/" target="_blank" rel="noopener">https://www.bilibili.com/read/cv1712931/</a></em></p><h1 id="逼逼叨"><a href="#逼逼叨" class="headerlink" title="逼逼叨"></a>逼逼叨</h1><p>首先，先介绍一下KMS这东西，KMS全称 Key Management Service，是微软官方面对大客户（使用数量多）的用于VOL版系统和OFFICE大批量激活的一个服务器。现在常见的KMS激活工具激活原理使用最小化的虚拟机搭建KMS服务器激活，但是这些工具内置病毒（把你电脑变成肉鸡，号称报毒是正常现象，实际上电脑端KMS激活只是几条批处理命令的事情），偷取个人信息以及偷偷占用你的电脑资源挖矿等。</p><p>至于KMS服务器，现在github上已有名为vlmcsd的开源KMS服务器，又经人移植到了openwrt（路由用的linux系统）平台上。</p><h1 id="开始激活"><a href="#开始激活" class="headerlink" title="开始激活"></a>开始激活</h1><p>首先，保证你的WINDOWS系统和OFFICE是VOL版的，这样才可以激活。</p><p>WINDOWS系统除了旗舰版和家庭版都能激活。（我使用WIN10 专业版）</p><p>OFFICE 2016在MSDN只有专业增强版，下载进来并安装，</p><p>使用“OFFICE2016转VOL版.bat”这个批处理文件能将OFFICE转为VOL版</p><h2 id="WINDOWS激活："><a href="#WINDOWS激活：" class="headerlink" title="WINDOWS激活："></a>WINDOWS激活：</h2><h3 id="第一步、打开DOS或powershell，输入slmgr-upk，卸载WINDOWS自带密钥"><a href="#第一步、打开DOS或powershell，输入slmgr-upk，卸载WINDOWS自带密钥" class="headerlink" title="第一步、打开DOS或powershell，输入slmgr /upk，卸载WINDOWS自带密钥"></a>第一步、打开DOS或powershell，输入slmgr /upk，卸载WINDOWS自带密钥</h3><h3 id="第二步、输入slmgr-ipk-W269N-WFGWX-YVC9B-4J6C9-T83GX"><a href="#第二步、输入slmgr-ipk-W269N-WFGWX-YVC9B-4J6C9-T83GX" class="headerlink" title="第二步、输入slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX"></a>第二步、输入slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</h3><p>(在上面key列表选择对应版本的Key，也可以搜索找对应版本key)</p><h3 id="安装对应密钥"><a href="#安装对应密钥" class="headerlink" title="安装对应密钥"></a>安装对应密钥</h3><p>常用Windows VL版KMS激活密钥列表：</p><p>Win10专业版KMS： W269N-WFGWX-YVC9B-4J6C9-T83GX</p><p>Win10企业版KMS： NPPR9-FWDCX-D2C8J-H872K-2YT43</p><p>Win10LTSB版KMS： DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJ</p><p>Win10家庭版KMS： TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</p><p>Win10教育版KMS： NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</p><p>Win7专业版KMS： FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4</p><p>Win7企业版KMS： 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH</p><h3 id="第三步、slmgr-skms-192-168-1-1（路由器IP地址"><a href="#第三步、slmgr-skms-192-168-1-1（路由器IP地址" class="headerlink" title="第三步、slmgr /skms 192.168.1.1（路由器IP地址)"></a>第三步、slmgr /skms 192.168.1.1（路由器IP地址)</h3><h3 id="第四步、slmgr-ato"><a href="#第四步、slmgr-ato" class="headerlink" title="第四步、slmgr /ato"></a>第四步、slmgr /ato</h3><h2 id="OFFICE激活："><a href="#OFFICE激活：" class="headerlink" title="OFFICE激活："></a>OFFICE激活：</h2><h3 id="第一步、找到你的OFFICE目录"><a href="#第一步、找到你的OFFICE目录" class="headerlink" title="第一步、找到你的OFFICE目录"></a>第一步、找到你的OFFICE目录</h3><p>我的是OFFICE 2016 32位版，目录为：</p><p>C:\Program Files (x86)\Microsoft Office\Office16</p><p>进去这个目录，可以看见有个OSPP.VBS文件</p><p>如果是OFFICE 2016 64位版，目录应为：</p><p>C:\Program Files\Microsoft Office\Office16</p><h3 id="第二步、powershell中"><a href="#第二步、powershell中" class="headerlink" title="第二步、powershell中"></a>第二步、powershell中</h3><pre class=" language-shell"><code class="language-shell">cd “C:\Program Files (x86)\Microsoft Office\Office16”  #（双引号中对应你的实际目录）</code></pre><h3 id="第三步、输入"><a href="#第三步、输入" class="headerlink" title="第三步、输入"></a>第三步、输入</h3><pre class=" language-shell"><code class="language-shell">cscript ospp.vbs /sethst:192.168.1.1    #（你的路由IP）</code></pre><h3 id="第四步、输入"><a href="#第四步、输入" class="headerlink" title="第四步、输入"></a>第四步、输入</h3><pre class=" language-bash"><code class="language-bash">cscript ospp.vbs /act</code></pre><p>接下来享受激活的WINDOWS和OFFICE吧（使用系统自身批处理命令激活，因此不可能有后门，不用担心病毒和信息窃取之类的）。如果失败，请检查WINDOWS和OFFICE具体版本信息。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> openwrt </tag>
            
            <tag> office </tag>
            
            <tag> kms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>solidworks保存实体时提示默认模板无效怎么办?</title>
      <link href="/2020/07/09/solidworks-bao-cun-shi-ti-shi-ti-shi-mo-ren-mo-ban-wu-xiao-zen-me-ban/"/>
      <url>/2020/07/09/solidworks-bao-cun-shi-ti-shi-ti-shi-mo-ren-mo-ban-wu-xiao-zen-me-ban/</url>
      
        <content type="html"><![CDATA[<p>保存实体时提示默认模板无效，或者分割特征失败，如下图：</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200709113600.png"><p><strong>解决办法</strong>：点击右下角齿轮图标，点击默认模板，将零件、装配体、工程图三个默认模板选择一下保存即可，具体设置看下图。</p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200709113941.png"><p>挨个点一下，选择一个有效模板，问题就解决了！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> solidworks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在hexo中接入站长统计工具</title>
      <link href="/2020/06/25/zai-hexo-zhong-jie-ru-zhan-chang-tong-ji-gong-ju/"/>
      <url>/2020/06/25/zai-hexo-zhong-jie-ru-zhan-chang-tong-ji-gong-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="申请百度统计的ID"><a href="#申请百度统计的ID" class="headerlink" title="申请百度统计的ID"></a>申请百度统计的ID</h2><h3 id="新增网站"><a href="#新增网站" class="headerlink" title="新增网站"></a>新增网站</h3><p>按照我给的示例填写</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200625150559.png" alt=""></p><h3 id="获取ID"><a href="#获取ID" class="headerlink" title="获取ID"></a>获取ID</h3><p>下图框起来的就是ID了，把这串ID复制，一会儿有用</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200625150806.png" alt=""></p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>进入theme/hexo-theme-matery/目录</p><pre class=" language-shell"><code class="language-shell">cd theme/hexo-theme-matery/vim _config.yml</code></pre><p>修改false为true</p><p>将ID填入</p><p>图示:</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200625151315.png" alt=""></p><p>保存!</p><h2 id="生成-amp-发布"><a href="#生成-amp-发布" class="headerlink" title="生成&amp;发布"></a>生成&amp;发布</h2><p>最后就是生成和发布了,运行以下命令:</p><pre class=" language-shell"><code class="language-shell">hexo g -d</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在matery中嵌入bilibili视频</title>
      <link href="/2020/06/25/zai-matery-zhong-qian-ru-bilibili-shi-pin/"/>
      <url>/2020/06/25/zai-matery-zhong-qian-ru-bilibili-shi-pin/</url>
      
        <content type="html"><![CDATA[<h3 id="首先找到分享嵌入代码"><a href="#首先找到分享嵌入代码" class="headerlink" title="首先找到分享嵌入代码"></a>首先找到分享嵌入代码</h3><p><img src="https://i.loli.net/2019/10/10/di3Cxcr9VLvjqM6.png" alt="Bilibili分享截图"></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid<span class="token punctuation">=</span>29789749&amp;cid<span class="token punctuation">=</span>51852984&amp;page<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><h3 id="在markdown中使用嵌入代码"><a href="#在markdown中使用嵌入代码" class="headerlink" title="在markdown中使用嵌入代码"></a>在markdown中使用嵌入代码</h3><iframe src="https://player.bilibili.com/player.html?aid=29789749&amp;cid=51852984&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="box-sizing: border-box; margin: 0px 0px 1rem;"></iframe><h3 id="调整大小和居中等"><a href="#调整大小和居中等" class="headerlink" title="调整大小和居中等"></a>调整大小和居中等</h3><p><a href="https://www.w3school.com.cn/tags/tag_iframe.asp" target="_blank" rel="noopener">iframe标签属性设置</a></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--    调整大小: width="xxx" height="xxx"--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid<span class="token punctuation">=</span>29789749&amp;cid<span class="token punctuation">=</span>51852984&amp;page<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span>  <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><iframe src="https://player.bilibili.com/player.html?aid=29789749&amp;cid=51852984&amp;page=1" width="700" height="480" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="box-sizing: border-box; margin: 0px 0px 1rem;"></iframe><h3 id="matery-主题修改首页展示视频"><a href="#matery-主题修改首页展示视频" class="headerlink" title="matery 主题修改首页展示视频"></a>matery 主题修改首页展示视频</h3><p>找到 /themes/hexo-theme-matery/layout/_widget/video.ejs 将第十一行左右代码改成Bilibili视频即可, 引入的 script 可以删掉.</p><p>修改后如下.</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %>&lt;%- url_for(theme.libs.css.dplayer) %>"</span><span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"video-player"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>video<span class="token punctuation">.</span>showTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title center-align"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fas fa-video-camera"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> theme<span class="token punctuation">.</span>video<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col l8 offset-l2 m10 offset-m1 s12"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"dplayer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"dplayer-video"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"position: relative; width: 100%; height: 0; padding-bottom: 75%;"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>iframe src<span class="token operator">=</span><span class="token string">"//player.bilibili.com/player.html?aid=29789749&amp;cid=51852984&amp;page=1"</span>  scrolling<span class="token operator">=</span><span class="token string">"no"</span> border<span class="token operator">=</span><span class="token string">"0"</span> frameborder<span class="token operator">=</span><span class="token string">"no"</span> framespacing<span class="token operator">=</span><span class="token string">"0"</span> allowfullscreen<span class="token operator">=</span><span class="token string">"true"</span> style<span class="token operator">=</span><span class="token string">"position: absolute; width: 100%; height: 100%; left: 0; top: 0;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>iframe<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre><p>1.把上面的aid和cid替换成你想嵌入的视频id</p><p>2.去主题文件夹下的_config文件中把首页显示视频选项设置为true</p><h3 id="原生voide-ejs文件"><a href="#原生voide-ejs文件" class="headerlink" title="原生voide.ejs文件"></a>原生voide.ejs文件</h3><p><a href="https://cdn.jsdelivr.net/gh/amahv/cdn/file/video.ejs" target="_blank" rel="noopener">下载地址</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo matery(主题)加载gitalk评论系统</title>
      <link href="/2020/06/24/hexo-matery-zhu-ti-jia-zai-gitalk-ping-lun-xi-tong/"/>
      <url>/2020/06/24/hexo-matery-zhu-ti-jia-zai-gitalk-ping-lun-xi-tong/</url>
      
        <content type="html"><![CDATA[<h2 id="注册GitHub-oAuth"><a href="#注册GitHub-oAuth" class="headerlink" title="注册GitHub oAuth"></a>注册GitHub oAuth</h2><p>登录GitHub之后按照图示点下去,注册oAuth功能</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200624224755.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200624224850.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200624225514.png" alt=""></p><p><img src="C:%5CUsers%5CYarnell-PC-MI%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200624225615247.png" alt="image-20200624225615247"></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo20200624224009.png" alt=""></p><p><strong>记录好这2串密钥,需要填写到主题目录下的_config.yml</strong></p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200624232644.png" alt=""></p><h2 id="修改主题文件夹下的-config"><a href="#修改主题文件夹下的-config" class="headerlink" title="修改主题文件夹下的_config"></a>修改主题文件夹下的_config</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> themes/hexo-theme-matery/vim _config.yml</code></pre><p>找到gitalk的设置:</p><ul><li><p><strong>clientID</strong> <code>String</code></p><p><strong>必须</strong>. GitHub Application Client ID.</p></li><li><p><strong>clientSecret</strong> <code>String</code></p><p><strong>必须</strong>. GitHub Application Client Secret.</p></li><li><p><strong>repo</strong> <code>String</code></p><p><strong>必须</strong>. GitHub repository.</p></li><li><p><strong>owner</strong> <code>String</code></p><p><strong>必须</strong>. GitHub repository 所有者，可以是个人或者组织。</p></li><li><p><strong>admin</strong> <code>Array</code></p><p><strong>必须</strong>. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200624231212.png" alt=""></p><p>修改好配置后保存.</p><h2 id="生成-amp-发布"><a href="#生成-amp-发布" class="headerlink" title="生成&amp;发布"></a>生成&amp;发布</h2><pre class=" language-shell"><code class="language-shell">hexo g -d    # 生成和发布</code></pre><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>1.打开你的网页</p><p>2.随便点开一篇博客</p><p>3.下翻到评论区</p><p>4.登录管理员的GitHub</p><p>5.测试一下评论的效果</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn/picGo/20200624233722.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【长期更新】STM32CubeMX和MDK ARM最新版下载地址</title>
      <link href="/2020/06/24/chang-qi-geng-xin-stm32cubemx-he-mdk-arm-zui-xin-ban-xia-zai-di-zhi/"/>
      <url>/2020/06/24/chang-qi-geng-xin-stm32cubemx-he-mdk-arm-zui-xin-ban-xia-zai-di-zhi/</url>
      
        <content type="html"><![CDATA[<p>﻿# 一.STM32CubeMX</p><h4 id="STM32CubeMX-5-6-0"><a href="#STM32CubeMX-5-6-0" class="headerlink" title="STM32CubeMX 5.6.0"></a>STM32CubeMX 5.6.0</h4><p>下载地址<br><a href="https://download.csdn.net/download/weixin_45033342/12291865" target="_blank" rel="noopener">https://download.csdn.net/download/weixin_45033342/12291865</a></p><h4 id="STM32CubeMX-V5-6-1"><a href="#STM32CubeMX-V5-6-1" class="headerlink" title="STM32CubeMX V5.6.1"></a>STM32CubeMX V5.6.1</h4><p>下载地址：<br><a href="https://download.csdn.net/download/weixin_45033342/12368401" target="_blank" rel="noopener">https://download.csdn.net/download/weixin_45033342/12368401</a></p><h1 id="二-Cube-HAL库-支持包"><a href="#二-Cube-HAL库-支持包" class="headerlink" title="二.Cube HAL库 支持包"></a>二.Cube HAL库 支持包</h1><h4 id="2-1-STM32F1"><a href="#2-1-STM32F1" class="headerlink" title="2.1 STM32F1"></a>2.1 STM32F1</h4><p>STM32F1_V1.8.0<br>下载地址：<br><a href="https://download.csdn.net/download/weixin_45033342/11744793" target="_blank" rel="noopener">https://download.csdn.net/download/weixin_45033342/11744793</a></p><h4 id="2-2-STM32F4"><a href="#2-2-STM32F4" class="headerlink" title="2.2 STM32F4"></a>2.2 STM32F4</h4><p>STM32F4_1.25.0<br>下载地址：<br><a href="https://download.csdn.net/download/weixin_45033342/12291944" target="_blank" rel="noopener">https://download.csdn.net/download/weixin_45033342/12291944</a></p><h1 id="三-Keil-MDK-ARM"><a href="#三-Keil-MDK-ARM" class="headerlink" title="三.Keil MDK ARM"></a>三.Keil MDK ARM</h1><h4 id="keil-mdk-v5-30"><a href="#keil-mdk-v5-30" class="headerlink" title="keil mdk v5.30"></a>keil mdk v5.30</h4><p>下载地址:<br><a href="https://download.csdn.net/download/weixin_45033342/12504240" target="_blank" rel="noopener">https://download.csdn.net/download/weixin_45033342/12504240</a></p><h4 id="keil-mdk-v5-29"><a href="#keil-mdk-v5-29" class="headerlink" title="keil mdk v5.29"></a>keil mdk v5.29</h4><p>下载地址:<br><a href="https://download.csdn.net/download/weixin_45033342/12032344" target="_blank" rel="noopener">https://download.csdn.net/download/weixin_45033342/12032344</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> cubeMX </tag>
            
            <tag> keil </tag>
            
            <tag> MDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode输出窗口中文乱码</title>
      <link href="/2020/06/24/vscode-shu-chu-chuang-kou-zhong-wen-luan-ma/"/>
      <url>/2020/06/24/vscode-shu-chu-chuang-kou-zhong-wen-luan-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/1.png" alt=""></p><h1 id="痛点"><a href="#痛点" class="headerlink" title="痛点"></a>痛点</h1><p>网上的方法有以下几个，均尝试，没有用！<br>修改系统环境变量<br>修改vscode用户设置<br>使用chcp命令</p><p>就这么个小问题，说解决的也使用没有晒图出来，都是骗子，什么心态……</p><p>解决方法：开始-&gt;设置-&gt;时间和语言-&gt;其他日期、时间和区域设置-&gt;区域.更改位置-&gt;管理.更改系统区域设置-&gt;勾选-&gt;重启<br><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/2.png" alt=""></p><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><h2 id="步骤图文"><a href="#步骤图文" class="headerlink" title="步骤图文"></a>步骤图文</h2><h3 id="点击左下角的开始按钮"><a href="#点击左下角的开始按钮" class="headerlink" title="点击左下角的开始按钮"></a>点击左下角的开始按钮</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/3.png" alt=""></p><h3 id="点击设置"><a href="#点击设置" class="headerlink" title="点击设置"></a>点击设置</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/4.png" alt=""></p><h3 id="时间和语言"><a href="#时间和语言" class="headerlink" title="时间和语言"></a>时间和语言</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/5.png" alt=""></p><h3 id="其他日期-时间和区域设置"><a href="#其他日期-时间和区域设置" class="headerlink" title="其他日期 时间和区域设置"></a>其他日期 时间和区域设置</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/6.png" alt=""></p><h3 id="更改位置"><a href="#更改位置" class="headerlink" title="更改位置"></a>更改位置</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/7.png" alt=""></p><h3 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/8.png" alt=""></p><h3 id="勾选"><a href="#勾选" class="headerlink" title="勾选"></a>勾选</h3><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/2.png" alt=""></p><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><h1 id="方法二（未测试）"><a href="#方法二（未测试）" class="headerlink" title="方法二（未测试）"></a>方法二（未测试）</h1><p>评论区道友提议参考这篇文章可能也有用<br><a href="https://zhuanlan.zhihu.com/p/94272165" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/94272165</a></p><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/9.png" alt=""><br>系统变量点击新建<br><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/10.png" alt=""><br>输入变量名： PYTHONIOENCODING ，变量值为utf-8，点击确定</p><p><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/11.png" alt=""><br>点击确定<br><img src="https://cdn.jsdelivr.net/gh/amahv/cdn@1.3/source/vscode_zhong_wen_luan_ma/img/12.png" alt=""></p><h2 id="然后重启vscode"><a href="#然后重启vscode" class="headerlink" title="然后重启vscode"></a><strong>然后重启vscode</strong></h2><p>重启vscode</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cover开发记录</title>
      <link href="/2020/06/23/cover-kai-fa-ji-lu/"/>
      <url>/2020/06/23/cover-kai-fa-ji-lu/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="1a2459a15054297396b3a458281964d6836b57ddf1f22d88f38173fefb9ffc2c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> lowPower </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/23/hello-world/"/>
      <url>/2020/06/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Debian Linux root 用户没有颜色</title>
      <link href="/2020/06/21/debian-linux-root-yong-hu-mei-you-yan-se/"/>
      <url>/2020/06/21/debian-linux-root-yong-hu-mei-you-yan-se/</url>
      
        <content type="html"><![CDATA[<p>@[toc]</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>阿里云 Debian10<br>用户：root</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>默认用户root在运行ls命令显示的目录和文件都是没有颜色的，这就无法很直接的分别是普通文件还是目录，这就感觉很难看，而且很难受，非得敲 # ls -all  命令才能看到是文件还是目录，这就很不爽。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>我在我的Debian系统中新建了一个git用户，可以在git的用户目录下面看到自动生成了一个.bashrc的文件</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /home/gitvim .bashrc</code></pre><p><img src="https://img-blog.csdnimg.cn/20200621223750783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTAzMzM0Mg==,size_16,color_FFFFFF,t_70" alt="/home/git目录下.bashrc文件"><br>可以看到git用户目录下的.bashrc文件中有很多内容.<br>再回头看看root目录下的.bashrc文件</p><pre class=" language-bash"><code class="language-bash">vim ~/.bashrc</code></pre><p><img src="https://img-blog.csdnimg.cn/20200621223947828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTAzMzM0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>空空如也<del>~</del></p><h4 id="拷贝一个-bashrc文件"><a href="#拷贝一个-bashrc文件" class="headerlink" title="拷贝一个.bashrc文件"></a>拷贝一个.bashrc文件</h4><pre class=" language-shell"><code class="language-shell">cd ~/cp .bashrc .bashrc.backup     #备份原生的.bashrc文件cp /home/git/.bashrc .        #拷贝有颜色的bashrc文件</code></pre><h4 id="使配置生效"><a href="#使配置生效" class="headerlink" title="使配置生效"></a>使配置生效</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> .bashrc<span class="token function">ls</span> /etc</code></pre><p>可以看到显示的文件已经有颜色了!</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
